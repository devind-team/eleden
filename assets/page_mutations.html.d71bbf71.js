import{_ as t,o as e,c as a,e as i}from"./app.6fb3dce6.js";const s={},l=i('<h1 id="\u043C\u043E\u0434\u0443\u043B\u044C-page-mutations" tabindex="-1"><a class="header-anchor" href="#\u043C\u043E\u0434\u0443\u043B\u044C-page-mutations" aria-hidden="true">#</a> \u041C\u043E\u0434\u0443\u043B\u044C page_mutations</h1><h3 id="\u0444\u0443\u043D\u043A\u0446\u0438\u0438" tabindex="-1"><a class="header-anchor" href="#\u0444\u0443\u043D\u043A\u0446\u0438\u0438" aria-hidden="true">#</a> \u0424\u0443\u043D\u043A\u0446\u0438\u0438</h3><table><thead><tr><th style="text-align:left;">\u0421\u0438\u0433\u043D\u0430\u0442\u0443\u0440\u0430</th><th style="text-align:left;">\u0414\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440\u044B</th><th style="text-align:left;">\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435</th></tr></thead><tbody><tr><td style="text-align:left;">check_tag_names(tag_names: List[str]) -&gt; List[devind_helpers.schema.types.ErrorFieldType]</td><td style="text-align:left;">-</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="\u043A\u043B\u0430\u0441\u0441-addpagemutation" tabindex="-1"><a class="header-anchor" href="#\u043A\u043B\u0430\u0441\u0441-addpagemutation" aria-hidden="true">#</a> \u041A\u043B\u0430\u0441\u0441 AddPageMutation</h2><p>\u0414\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B</p><h3 id="\u043C\u0435\u0442\u043E\u0434\u044B" tabindex="-1"><a class="header-anchor" href="#\u043C\u0435\u0442\u043E\u0434\u044B" aria-hidden="true">#</a> \u041C\u0435\u0442\u043E\u0434\u044B</h3><table><thead><tr><th style="text-align:left;">\u0421\u0438\u0433\u043D\u0430\u0442\u0443\u0440\u0430</th><th style="text-align:left;">\u0414\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440\u044B</th><th style="text-align:left;">\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435</th></tr></thead><tbody><tr><td style="text-align:left;">mutate_and_get_payload( root, info: graphql.execution.base.ResolveInfo, text: Optional[str], *args, **kwargs)</td><td style="text-align:left;">[&#39;staticmethod&#39;, &#39;permission_classes([IsAuthenticated, AddPage])&#39;]</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="\u043A\u043B\u0430\u0441\u0441-changepagemutation" tabindex="-1"><a class="header-anchor" href="#\u043A\u043B\u0430\u0441\u0441-changepagemutation" aria-hidden="true">#</a> \u041A\u043B\u0430\u0441\u0441 ChangePageMutation</h2><p>\u041E\u0431\u043E\u0431\u0449\u0435\u043D\u043D\u0430\u044F \u043C\u0443\u0442\u0430\u0446\u0438\u044F \u0434\u043B\u044F \u0432\u043E\u0437\u0432\u0440\u0430\u0449\u0435\u043D\u0438\u044F \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u043D\u043E\u0439 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B</p><h3 id="\u043C\u0435\u0442\u043E\u0434\u044B-1" tabindex="-1"><a class="header-anchor" href="#\u043C\u0435\u0442\u043E\u0434\u044B-1" aria-hidden="true">#</a> \u041C\u0435\u0442\u043E\u0434\u044B</h3><table><thead><tr><th style="text-align:left;">\u0421\u0438\u0433\u043D\u0430\u0442\u0443\u0440\u0430</th><th style="text-align:left;">\u0414\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440\u044B</th><th style="text-align:left;">\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435</th></tr></thead><tbody><tr><td style="text-align:left;">get_page( info: graphql.execution.base.ResolveInfo, page_id: str) -&gt; apps.pages.models.page.Page</td><td style="text-align:left;">[&#39;staticmethod&#39;]</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="\u043A\u043B\u0430\u0441\u0441-changepageavatarmutation" tabindex="-1"><a class="header-anchor" href="#\u043A\u043B\u0430\u0441\u0441-changepageavatarmutation" aria-hidden="true">#</a> \u041A\u043B\u0430\u0441\u0441 ChangePageAvatarMutation</h2><p>\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435 \u0430\u0432\u0430\u0442\u0430\u0440\u0430 \u043D\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0435</p><h3 id="\u043C\u0435\u0442\u043E\u0434\u044B-2" tabindex="-1"><a class="header-anchor" href="#\u043C\u0435\u0442\u043E\u0434\u044B-2" aria-hidden="true">#</a> \u041C\u0435\u0442\u043E\u0434\u044B</h3><table><thead><tr><th style="text-align:left;">\u0421\u0438\u0433\u043D\u0430\u0442\u0443\u0440\u0430</th><th style="text-align:left;">\u0414\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440\u044B</th><th style="text-align:left;">\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435</th></tr></thead><tbody><tr><td style="text-align:left;">mutate_and_get_payload( root, info: graphql.execution.base.ResolveInfo, page_id: str, avatar: django.core.files.uploadedfile.InMemoryUploadedFile, *args, **kwargs)</td><td style="text-align:left;">[&#39;staticmethod&#39;, &#39;permission_classes([IsAuthenticated, ChangePage])&#39;]</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="\u043A\u043B\u0430\u0441\u0441-changepagebooleanpropertymutation" tabindex="-1"><a class="header-anchor" href="#\u043A\u043B\u0430\u0441\u0441-changepagebooleanpropertymutation" aria-hidden="true">#</a> \u041A\u043B\u0430\u0441\u0441 ChangePageBooleanPropertyMutation</h2><p>\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435 boolean \u0441\u0432\u043E\u0439\u0441\u0442\u0432 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B</p><h3 id="\u043C\u0435\u0442\u043E\u0434\u044B-3" tabindex="-1"><a class="header-anchor" href="#\u043C\u0435\u0442\u043E\u0434\u044B-3" aria-hidden="true">#</a> \u041C\u0435\u0442\u043E\u0434\u044B</h3><table><thead><tr><th style="text-align:left;">\u0421\u0438\u0433\u043D\u0430\u0442\u0443\u0440\u0430</th><th style="text-align:left;">\u0414\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440\u044B</th><th style="text-align:left;">\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435</th></tr></thead><tbody><tr><td style="text-align:left;">mutate_and_get_payload( root, info: graphql.execution.base.ResolveInfo, page_id: str, field: str, value: bool, *args, **kwargs)</td><td style="text-align:left;">[&#39;staticmethod&#39;, &#39;permission_classes([IsAuthenticated, ChangePage])&#39;]</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="\u043A\u043B\u0430\u0441\u0441-changepagetitlemutation" tabindex="-1"><a class="header-anchor" href="#\u043A\u043B\u0430\u0441\u0441-changepagetitlemutation" aria-hidden="true">#</a> \u041A\u043B\u0430\u0441\u0441 ChangePageTitleMutation</h2><p>\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435 \u043D\u0430\u0437\u0432\u0430\u043D\u0438\u044F \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B</p><h3 id="\u043C\u0435\u0442\u043E\u0434\u044B-4" tabindex="-1"><a class="header-anchor" href="#\u043C\u0435\u0442\u043E\u0434\u044B-4" aria-hidden="true">#</a> \u041C\u0435\u0442\u043E\u0434\u044B</h3><table><thead><tr><th style="text-align:left;">\u0421\u0438\u0433\u043D\u0430\u0442\u0443\u0440\u0430</th><th style="text-align:left;">\u0414\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440\u044B</th><th style="text-align:left;">\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435</th></tr></thead><tbody><tr><td style="text-align:left;">mutate_and_get_payload( root, info: graphql.execution.base.ResolveInfo, page_id: str, title: str, *args, **kwargs)</td><td style="text-align:left;">[&#39;staticmethod&#39;, &#39;permission_classes([IsAuthenticated, ChangePage])&#39;]</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="\u043A\u043B\u0430\u0441\u0441-changepagetagsmutation" tabindex="-1"><a class="header-anchor" href="#\u043A\u043B\u0430\u0441\u0441-changepagetagsmutation" aria-hidden="true">#</a> \u041A\u043B\u0430\u0441\u0441 ChangePageTagsMutation</h2><p>\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u0442\u0435\u0433\u043E\u0432 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B</p><h3 id="\u043C\u0435\u0442\u043E\u0434\u044B-5" tabindex="-1"><a class="header-anchor" href="#\u043C\u0435\u0442\u043E\u0434\u044B-5" aria-hidden="true">#</a> \u041C\u0435\u0442\u043E\u0434\u044B</h3><table><thead><tr><th style="text-align:left;">\u0421\u0438\u0433\u043D\u0430\u0442\u0443\u0440\u0430</th><th style="text-align:left;">\u0414\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440\u044B</th><th style="text-align:left;">\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435</th></tr></thead><tbody><tr><td style="text-align:left;">mutate_and_get_payload( root, info: graphql.execution.base.ResolveInfo, page_id: str, tag_names: List[str], *args, **kwargs)</td><td style="text-align:left;">[&#39;staticmethod&#39;, &#39;permission_classes([IsAuthenticated, ChangePage])&#39;]</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="\u043A\u043B\u0430\u0441\u0441-changepagecategorymutation" tabindex="-1"><a class="header-anchor" href="#\u043A\u043B\u0430\u0441\u0441-changepagecategorymutation" aria-hidden="true">#</a> \u041A\u043B\u0430\u0441\u0441 ChangePageCategoryMutation</h2><p>\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435 \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0438\u0438 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B</p><h3 id="\u043C\u0435\u0442\u043E\u0434\u044B-6" tabindex="-1"><a class="header-anchor" href="#\u043C\u0435\u0442\u043E\u0434\u044B-6" aria-hidden="true">#</a> \u041C\u0435\u0442\u043E\u0434\u044B</h3><table><thead><tr><th style="text-align:left;">\u0421\u0438\u0433\u043D\u0430\u0442\u0443\u0440\u0430</th><th style="text-align:left;">\u0414\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440\u044B</th><th style="text-align:left;">\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435</th></tr></thead><tbody><tr><td style="text-align:left;">mutate_and_get_payload( self, root, info: graphql.execution.base.ResolveInfo, page_id: str, category_id: int, *args, **kwargs)</td><td style="text-align:left;">[&#39;permission_classes([IsAuthenticated, ChangePage])&#39;]</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="\u043A\u043B\u0430\u0441\u0441-changepagekindmutation" tabindex="-1"><a class="header-anchor" href="#\u043A\u043B\u0430\u0441\u0441-changepagekindmutation" aria-hidden="true">#</a> \u041A\u043B\u0430\u0441\u0441 ChangePageKindMutation</h2><p>\u0418\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0435 \u0442\u0438\u043F\u0430 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B</p><h3 id="\u043C\u0435\u0442\u043E\u0434\u044B-7" tabindex="-1"><a class="header-anchor" href="#\u043C\u0435\u0442\u043E\u0434\u044B-7" aria-hidden="true">#</a> \u041C\u0435\u0442\u043E\u0434\u044B</h3><table><thead><tr><th style="text-align:left;">\u0421\u0438\u0433\u043D\u0430\u0442\u0443\u0440\u0430</th><th style="text-align:left;">\u0414\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440\u044B</th><th style="text-align:left;">\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435</th></tr></thead><tbody><tr><td style="text-align:left;">mutate_and_get_payload( root, info: graphql.execution.base.ResolveInfo, page_id: str, page_kind_id: int, *args, **kwargs)</td><td style="text-align:left;">[&#39;staticmethod&#39;, &#39;permission_classes([IsAuthenticated, ChangePage])&#39;]</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="\u043A\u043B\u0430\u0441\u0441-deletepagemutation" tabindex="-1"><a class="header-anchor" href="#\u043A\u043B\u0430\u0441\u0441-deletepagemutation" aria-hidden="true">#</a> \u041A\u043B\u0430\u0441\u0441 DeletePageMutation</h2><p>\u0423\u0434\u0430\u043B\u0435\u043D\u0438\u0435 \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u044B</p><h3 id="\u043C\u0435\u0442\u043E\u0434\u044B-8" tabindex="-1"><a class="header-anchor" href="#\u043C\u0435\u0442\u043E\u0434\u044B-8" aria-hidden="true">#</a> \u041C\u0435\u0442\u043E\u0434\u044B</h3><table><thead><tr><th style="text-align:left;">\u0421\u0438\u0433\u043D\u0430\u0442\u0443\u0440\u0430</th><th style="text-align:left;">\u0414\u0435\u043A\u043E\u0440\u0430\u0442\u043E\u0440\u044B</th><th style="text-align:left;">\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435</th></tr></thead><tbody><tr><td style="text-align:left;">mutate_and_get_payload( root, info: graphql.execution.base.ResolveInfo, page_id: str, *args, **kwargs)</td><td style="text-align:left;">[&#39;staticmethod&#39;, &#39;permission_classes([IsAuthenticated, DeletePage])&#39;]</td><td style="text-align:left;">-</td></tr></tbody></table><h2 id="\u043A\u043B\u0430\u0441\u0441-pagemutations" tabindex="-1"><a class="header-anchor" href="#\u043A\u043B\u0430\u0441\u0441-pagemutations" aria-hidden="true">#</a> \u041A\u043B\u0430\u0441\u0441 PageMutations</h2><p>Object Type Definition Almost all of the GraphQL types you define will be object types. Object types have a name, but most importantly describe their fields. The name of the type defined by an <em>ObjectType</em> defaults to the class name. The type description defaults to the class docstring. This can be overriden by adding attributes to a Meta inner class. The class attributes of an <em>ObjectType</em> are mounted as instances of <code>graphene.Field</code>. Methods starting with <code>resolve_&lt;field_name&gt;</code> are bound as resolvers of the matching Field name. If no resolver is provided, the default resolver is used. Ambiguous types with Interface and Union can be determined through<code>is_type_of</code> method and <code>Meta.possible_types</code> attribute. .. code:: python from graphene import ObjectType, String, Field class Person(ObjectType): class Meta: description = &#39;A human&#39; # implicitly mounted as Field first_name = String() # explicitly mounted as Field last_name = Field(String) def resolve_last_name(parent, info): return last_name ObjectType must be mounted using <code>graphene.Field</code>. .. code:: python from graphene import ObjectType, Field class Query(ObjectType): person = Field(Person, description=&quot;My favorite person&quot;) Meta class options (optional): name (str): Name of the GraphQL type (must be unique in schema). Defaults to class name. description (str): Description of the GraphQL type in the schema. Defaults to class docstring. interfaces (Iterable[graphene.Interface]): GraphQL interfaces to extend with this object. all fields from interface will be included in this object&#39;s schema. possible_types (Iterable[class]): Used to test parent value object via isintance to see if this type can be used to resolve an ambigous type (interface, union). default_resolver (any Callable resolver): Override the default resolver for this type. Defaults to graphene default resolver which returns an attribute or dictionary key with the same name as the field. fields (Dict[str, graphene.Field]): Dictionary of field name to Field. Not recommended to use (prefer class attributes). An <em>ObjectType</em> can be used as a simple value object by creating an instance of the class. .. code:: python p = Person(first_name=&#39;Bob&#39;, last_name=&#39;Roberts&#39;) assert p.first_name == &#39;Bob&#39; Args: *args (List[Any]): Positional values to use for Field values of value object **kwargs (Dict[str: Any]): Keyword arguments to use for Field values of value object</p>',41),n=[l];function d(r,h){return e(),a("div",null,n)}var g=t(s,[["render",d],["__file","page_mutations.html.vue"]]);export{g as default};
