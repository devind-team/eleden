schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

"""Токен."""
type AccessTokenType {
  application: ApplicationType
  created: DateTime!
  expires: DateTime!
  id: ID!
  scope: String!
  session: SessionType
  token: String!
  updated: DateTime!
  user: UserType
}

"""
Типы измнения связей между записями в базе данных
- ADD - Добавление
- DELETE - Удаление
"""
enum ActionRelationShip {
  ADD
  DELETE
}

"""Информация активности пользователей и времени ответа браузеров."""
type ActiveStatisticsType {
  """Запросы"""
  queries: [DateStatisticsType]!
  """Время ответа сервера"""
  times: [DateStatisticsType]!
}

input AddArticleFromBibtexMutationInput {
  clientMutationId: String
  """Файл bibtex публикации"""
  file: Upload
}

"""Добавление публикации из файла bibtex."""
type AddArticleFromBibtexMutationPayload {
  """Новая статья"""
  articles: [ArticleType!]
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddArticleMutationInput {
  """Дополнительные поля публикации"""
  additional: String!
  """Все авторы публикации"""
  authors: [AuthorInputType!]!
  clientMutationId: String
  """Файл публикации"""
  file: Upload
  """Ссылка на файл публикации"""
  fileLink: String
  """Идентификатор типа индексирования статьи"""
  indexId: ID!
  """Тип публикации"""
  kindId: ID!
  """Название работы"""
  name: String!
  """Объем работы"""
  workload: Float
  """Год публикации"""
  year: Int!
}

"""Добавление публикации."""
type AddArticleMutationPayload {
  """Новая статья"""
  article: ArticleType
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Загруженный файл статьи"""
  file: FileType
  """Успех мутации"""
  success: Boolean!
}

input AddAttestationMutationInput {
  clientMutationId: String
  """Идентификатор пользователя, который подтвердил аттестацию"""
  confirmedById: ID
  """Идентификатор курса"""
  courseId: ID!
  """Описание"""
  description: String!
  """Идентификатор периода"""
  periodId: ID!
  """Идентификатор учета студентов"""
  registrationId: ID!
  """Идентификатор пользователя, который выставил аттестацию"""
  setById: ID!
  """Идентификатор учащегося"""
  userId: ID!
}

"""Добавление аттестации"""
type AddAttestationMutationPayload {
  """Новая аттестация"""
  attestation: AttestationType
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddCategoryMutationInput {
  """Аватар"""
  avatar: Upload
  clientMutationId: String
  """Идентификатор родительской категории"""
  parentId: ID
  """Название категории"""
  text: String!
}

"""Мутация для добавления категории"""
type AddCategoryMutationPayload {
  """Добавленная котегория"""
  category: CategoryType
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddChatMutationInput {
  """Аватар чата"""
  avatar: Upload
  clientMutationId: String
  """Название чата"""
  name: String
  """Пользователи"""
  userIds: [ID!]!
}

"""Добавление чата """
type AddChatMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  member: MemberType
  """Успех мутации"""
  success: Boolean!
}

input AddChildItemPropMutationInput {
  clientMutationId: String
  """Заголовок столбца"""
  header: String!
  """Дочерний тег"""
  itemProp: String!
  """Идентификатор родительского тега"""
  itemPropId: ID!
  """Положение при выводе"""
  showPosition: Int!
}

type AddChildItemPropMutationPayload {
  childItemProp: ChildItemPropType!
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddCompetencesMutationInput {
  clientMutationId: String
  """Идентификатор дисциплины"""
  competenceIds: [ID!]!
  """Идентификатор дисциплины"""
  disciplineId: ID!
}

"""Добавление компетенций дисциплины"""
type AddCompetencesMutationPayload {
  clientMutationId: String
  """Добавленные компетенции"""
  competences: [CompetenceType!]
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddCoursesMutationInput {
  clientMutationId: String
  """Частичные данные курсов"""
  courses: [CourseInputType!]
  """Идентификатор группы"""
  teamId: ID!
}

"""Добавление курсов"""
type AddCoursesMutationPayload {
  clientMutationId: String
  """Новые курсы"""
  courses: [CourseType!]
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddDirectionMutationInput {
  clientMutationId: String
  """Название"""
  code: String!
  """Код специальности"""
  name: String!
}

"""Добавление направления подготовки"""
type AddDirectionMutationPayload {
  clientMutationId: String
  """Новое направление подготовки"""
  direction: DirectionType
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddDisciplineMethodologicalSupportsMutationInput {
  clientMutationId: String
  """Идентификатор дисциплины"""
  disciplineId: ID!
  """Архивный файл"""
  file: Upload
}

"""Добавление методического обеспечения дисциплины."""
type AddDisciplineMethodologicalSupportsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Новое методическое обеспечение"""
  methodologicalSupports: [MethodologicalSupportType!]
  """Успех мутации"""
  success: Boolean!
}

input AddDisciplineMutationInput {
  """Аннотация к рабочей программе дисциплины/практики/ГИА"""
  annotation: Upload
  clientMutationId: String
  """Код дисциплины"""
  code: String!
  """Идентификатор учебной программы"""
  eduProgramId: ID!
  """Методическое обеспечение дисциплины"""
  methodologicalSupport: [MethodologicalSupportInputType]
  """Название дисциплины"""
  name: String!
  """Родительская дисциплина"""
  parentId: ID
  """Идентификаторы авторов"""
  userIds: [ID!]!
  """Форма представления дисциплины"""
  viewId: ID
  """Рабочая программа дисциплины"""
  workProgram: Upload
}

"""Добавление дисциплины."""
type AddDisciplineMutationPayload {
  clientMutationId: String
  """Новая дисциплина"""
  discipline: DisciplineType
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddDisciplinesFilesMutationInput {
  clientMutationId: String
  """Идентификатор учебной программы"""
  eduProgramId: ID!
  """Архивный файл"""
  file: Upload
}

"""
Добавление файлов дисциплин (аннотаций и рабочих программ)

Примеры названий файлов в архиве:
анн_13.03.02_ЭЭ_РЭМС_Б1.В.07_Теория автоматического управления_о_2019.pdf;
13.03.02_ЭЭ_РЭМС_Б1.В.07_Теория автоматического управления_о_2019.pdf.
Если дисциплина существует, то к ней прикрепится файл, иначе ошибка.
"""
type AddDisciplinesFilesMutationPayload {
  clientMutationId: String
  """Измененные дисциплины"""
  disciplines: [DisciplineType!]
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddEduFormMutationInput {
  clientMutationId: String
  """Название"""
  name: String!
  """Идентификатор родительской формы обучения"""
  parentId: ID
  """Короткое название"""
  shortName: String!
}

"""Добавление формы обучения"""
type AddEduFormMutationPayload {
  clientMutationId: String
  """Новая форма обучения"""
  eduForm: EduFormType
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddEduHoursMutationInput {
  clientMutationId: String
  """Курс"""
  courseNumber: Int!
  """Идентификатор дисциплины"""
  disciplineId: ID!
  """Тип часов"""
  hoursKindId: ID!
  """Семестр"""
  semesterNumber: Int!
  """Значение"""
  value: Int!
  """Идентификатор вида работ"""
  workKindId: ID!
}

"""Добавление часов по плану дисциплины"""
type AddEduHoursMutationPayload {
  clientMutationId: String
  """Добавленный вид работы"""
  eduHour: EduHoursType
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddEduProgramFromPlxMutationInput {
  clientMutationId: String
  """Файл plx"""
  file: Upload!
}

"""Добавление образовательной программы из файла plx."""
type AddEduProgramFromPlxMutationPayload {
  clientMutationId: String
  """Новая образовательная программа"""
  eduProgram: EduProgramType
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddEduProgramMethodologicalSupportsMutationInput {
  clientMutationId: String
  """Идентификатор учебной программы"""
  eduProgramId: ID!
  """Архивный файл"""
  file: Upload
}

"""
Добавление методического обеспечения дисциплин одной образовательной программы

Пример названия файла в архиве: Б1.О.03_Философия.docx.
"""
type AddEduProgramMethodologicalSupportsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Новое методическое обеспечение"""
  methodologicalSupports: [MethodologicalSupportType!]
  """Успех мутации"""
  success: Boolean!
}

input AddEduProgramMutationInput {
  """Признак адапативности программ"""
  adaptive: Boolean!
  """Год поступления"""
  admission: Int!
  """Календарный учебный график"""
  calendar: Upload
  clientMutationId: String
  """Описание"""
  description: Upload
  """Идентификатор направления подготовки"""
  directionId: ID!
  """Идентификатор формы обучения"""
  eduFormId: Int!
  """Индентификатор образовательной программы, откуда необходимо копировать дисциплины"""
  eduProgramId: ID
  """Ускоренная программа"""
  expedited: Boolean!
  """Профиль подготовки"""
  name: String!
  """Учебный план"""
  syllabus: Upload
}

"""Добавление образовательной программы."""
type AddEduProgramMutationPayload {
  clientMutationId: String
  """Новая образовательная программа"""
  eduProgram: EduProgramType
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddEduProgramsMutationInput {
  clientMutationId: String
  """Источник данных: файл xlsx, csv, json"""
  file: Upload!
}

"""Добавление образовательных программ."""
type AddEduProgramsMutationPayload {
  clientMutationId: String
  """Новые образовательные программы"""
  eduPrograms: [EduProgramType]
  """Ошибки валидации"""
  errors: [RowFieldErrorType]!
  """Успех мутации"""
  success: Boolean!
  """Валидируемый документ"""
  table: TableType
}

input AddFileAttachmentsMutationInput {
  clientMutationId: String
  """Идентификатор пользователя, который подтвердил файлы"""
  confirmedById: ID
  """Идентификатор курса"""
  courseId: ID!
  """Описание файла"""
  describe: String!
  """Идентификатор типа файла"""
  fileKindId: ID!
  """Файлы"""
  files: [Upload!]!
  """Идентификатор периода"""
  periodId: ID!
  """Идентификатор учащегося"""
  userId: ID!
}

"""Добавление прикрепленных файлов из файлов"""
type AddFileAttachmentsMutationPayload {
  """Новые прикрепленные файлы"""
  attachments: [AttachmentType]
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddFileKindMutationInput {
  """Допустимый формат загрузки файлов"""
  accept: String!
  clientMutationId: String
  """Наименование цели загрузки файла"""
  name: String!
}

"""Добавление типа загружаемых файлов в портфолио"""
type AddFileKindMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Добавленный тип загружаемых файлов в портфолио"""
  fileKind: FileKindType
  """Успех мутации"""
  success: Boolean!
}

input AddFileMutationInput {
  clientMutationId: String
  """Загружаемые файлы"""
  files: [Upload!]!
  """Идентификатор пользователя"""
  userId: ID
}

"""Мутация для загрузки файлов"""
type AddFileMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Загруженные файлы"""
  files: [FileType]!
  """Успех мутации"""
  success: Boolean!
}

input AddGroupMutationInput {
  clientMutationId: String
  """Название группы"""
  name: String!
  permissionFrom: Int
}

"""Мутация для добавления группы."""
type AddGroupMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Добавленная группа"""
  group: GroupType
  """Успех мутации"""
  success: Boolean!
}

input AddHandoutMutationInput {
  clientMutationId: String
  """Идентификатор курса"""
  courseId: ID!
  """Описание раздаточного материала"""
  description: String!
  """Файл пользователя"""
  file: Upload!
  """Идентификатор периода"""
  periodId: ID!
}

"""Добавление раздаточного материала"""
type AddHandoutMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Новый раздаточный материал"""
  handout: HandoutType
  """Успех мутации"""
  success: Boolean!
}

input AddItemPropContainerMutationInput {
  clientMutationId: String
  """Добавляемая структура"""
  itemPropContainer: ItemPropContainerInputType!
  """Идентификатор подраздела"""
  urlId: ID!
}

type AddItemPropContainerMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  itemPropContainer: ItemPropContainerType
  """Успех мутации"""
  success: Boolean!
}

input AddJobMutationInput {
  clientMutationId: String
  """Создавать приказ в формате docx"""
  generateDocx: Boolean!
  """Создавать приказ в формате pdf"""
  generatePdf: Boolean!
  """Тип работы"""
  kind: String!
  """Идентификатор занимаемой должности"""
  postId: ID!
  """Занимаемая ставка"""
  rate: Float!
  """Дата присвоения статуса должности пользователя на месте работы"""
  statusCreatedAt: Date!
  """Идентификатор статуса должности пользователя на месте работы"""
  statusId: ID!
  """Идентификатор группы"""
  teamId: ID!
  userId: ID!
}

"""Добавление пользователя в группу"""
type AddJobMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Новое место работы пользователя"""
  job: JobType
  """Ссылка на сгенерированный файл"""
  src: String
  """Успех мутации"""
  success: Boolean!
}

input AddJobPostMutationInput {
  clientMutationId: String
  """Создавать приказ в формате docx"""
  generateDocx: Boolean!
  """Создавать приказ в формате pdf"""
  generatePdf: Boolean!
  jobId: ID!
  """Тип работы"""
  kind: String!
  """Идентификатор занимаемой должности"""
  postId: ID!
  """Занимаемая ставка"""
  rate: Float!
  """Дата присвоения статуса должности пользователя на месте работы"""
  statusCreatedAt: Date!
  """Идентификатор статуса должности пользователя на месте работы"""
  statusId: ID!
}

"""Добавление должности пользователя в группе"""
type AddJobPostMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Новая должность пользователя на месте работы"""
  jobPost: JobPostType
  """Ссылка на сгенерированный файл"""
  src: String
  """Успех мутации"""
  success: Boolean!
}

input AddJobPostStatusHistoryMutationInput {
  clientMutationId: String
  """Завершить предыдущие статусы"""
  completePrevious: Boolean
  """Создавать приказ в формате docx"""
  generateDocx: Boolean!
  """Создавать приказ в формате pdf"""
  generatePdf: Boolean!
  """Идентификатор должности пользователя на месте работы"""
  jobPostId: ID!
  """Дата присвоения статуса должности пользователя на месте работы"""
  statusCreatedAt: Date!
  """Идентификатор статуса должности пользователя на месте работы"""
  statusId: ID!
}

"""Добавление истории статусов должности пользователя на месте работы"""
type AddJobPostStatusHistoryMutationPayload {
  clientMutationId: String
  """Завершенные истории статусов должности пользователя на месте работы"""
  completedJobPostStatusHistory: [JobPostStatusHistoryType!]
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Новая история статусов должности пользователя на месте работы"""
  newJobPostStatusHistory: JobPostStatusHistoryType
  """Ссылка на сгенерированный файл"""
  src: String
  """Успех мутации"""
  success: Boolean!
}

input AddMessageMutationInput {
  """Идентификатор чата"""
  chatId: ID!
  clientMutationId: String
  """Прикреплённые файлы"""
  files: [Upload!]
  """Пересылаемые сообщения"""
  forwardedIds: [ID!]
  """Текст сообщения"""
  text: String
}

"""Добавление сообщения """
type AddMessageMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddMethodologicalSupportMutationInput {
  clientMutationId: String
  """Идентификатор дисциплины"""
  disciplineId: ID!
  """Подпись файла"""
  name: String!
  """Файл"""
  src: Upload!
}

"""Добавление методического обеспечения"""
type AddMethodologicalSupportMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Новое методическое обеспечение"""
  methodologicalSupport: MethodologicalSupportType
  """Успех мутации"""
  success: Boolean!
}

input AddPageMutationInput {
  """Аватар"""
  avatar: Upload
  """Категория страницы"""
  categoryId: ID!
  clientMutationId: String
  """Скрываем ли страницу"""
  hide: Boolean
  """Тип страницы"""
  kindId: Int
  """Показывать параллакс или нет"""
  parallax: Boolean
  """Приоритет"""
  priority: Boolean
  """Подпись страницы"""
  signature: String
  """Теги на странице"""
  tagNames: [String!]
  """Первоначальное добавление текста страницы"""
  text: String
  """Заголовок"""
  title: String!
}

"""Добавление страницы"""
type AddPageMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Добавленная страница"""
  page: PageType
  """Успех мутации"""
  success: Boolean!
}

input AddPeriodMutationInput {
  clientMutationId: String
  name: String!
  shortName: String!
}

"""Добавление периода"""
type AddPeriodMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddPortfolioFileAttachmentsMutationInput {
  clientMutationId: String
  """Идентификатор пользователя, который подтвердил файлы"""
  confirmedById: ID
  """Идентификатор курса"""
  courseId: ID!
  """Идентификатор периода"""
  periodId: ID!
  """Идентификаторы файлов портфолио"""
  portfolioFileIds: [ID!]!
  """Идентификатор учащегося"""
  userId: ID!
}

"""Добавление прикрепленных файлов из файлов портофолио"""
type AddPortfolioFileAttachmentsMutationPayload {
  """Новые прикрепленные файлы"""
  attachments: [AttachmentType]
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddPortfolioFileMutationInput {
  clientMutationId: String
  """Подтверждение файла при загрузке"""
  confirm: Boolean = false
  """Описание"""
  describe: String!
  """Дисциплина"""
  disciplineId: ID
  """Привязанный к портфолио файл"""
  file: Upload!
  """Тип файла из портфолио"""
  kindId: ID!
  """Пользователь"""
  userId: ID!
}

"""Добавление файла в портфолио"""
type AddPortfolioFileMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Добавленный в портфолио файл"""
  portfolioFile: PortfolioFileType
  """Успех мутации"""
  success: Boolean!
}

input AddPortfolioFilesMutationInput {
  clientMutationId: String
  """Подтверждение файлов при загрузке"""
  confirm: Boolean = false
  """Описание"""
  describe: String!
  """Идентификатор дисциплины"""
  disciplineId: ID
  """Архивный файл"""
  file: Upload
  """Тип файла из портфолио"""
  kindId: ID!
  """Идентификатор группы"""
  teamId: ID!
}

"""Добавление файлов в портфолио"""
type AddPortfolioFilesMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Добавленные в портфолио файлы"""
  portfolioFiles: [PortfolioFileType]
  """Успех мутации"""
  success: Boolean!
}

input AddProfileMutationInput {
  clientMutationId: String
  """Уникальный код настройки"""
  code: String!
  """Тип настройки: [0-3]"""
  kind: Int
  """Название настройки"""
  name: String!
  """Родительская настройка"""
  parentId: Int
}

"""Мутация для добавления записи профиля."""
type AddProfileMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Добавленный профайл"""
  profile: ProfileType
  """Успех мутации"""
  success: Boolean!
}

input AddRegistrationMutationInput {
  clientMutationId: String
  name: String!
  shortName: String!
}

"""Добавление регистрации"""
type AddRegistrationMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input AddRowMutationInput {
  clientMutationId: String
  """Позиция при добавлении"""
  index: Int
  """Идентификатор контейнера"""
  itemPropContainerId: ID!
  """Значение"""
  values: [String]!
}

"""Мутация добавления строки в таблицу."""
type AddRowMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  itemPropContainer: ItemPropContainerType!
  """Успех мутации"""
  success: Boolean!
}

input AddSectionFilesMutationInput {
  clientMutationId: String
  """Загружаемые изображения"""
  files: [Upload!]!
  """Идентификатор страницы"""
  pageId: ID!
  """Текст страницы"""
  text: String!
}

"""Добавление секции"""
type AddSectionFilesMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Поле с файлами"""
  section: SectionFilesType
  """Успех мутации"""
  success: Boolean!
}

input AddSectionGalleryMutationInput {
  clientMutationId: String
  """Загружаемые изображения"""
  images: [Upload!]!
  """Идентификатор страницы"""
  pageId: ID!
  """Текст страницы"""
  text: String!
}

"""Добавление секции"""
type AddSectionGalleryMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Поле с файлами"""
  section: SectionGalleryType
  """Успех мутации"""
  success: Boolean!
}

input AddSectionTextMutationInput {
  clientMutationId: String
  """Идентификатор страницы"""
  pageId: ID!
  """Текст страницы"""
  text: String!
}

"""Добавление секции"""
type AddSectionTextMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Текстовое поле"""
  section: SectionTextType
  """Успех мутации"""
  success: Boolean!
}

input AddSubsectionMutationInput {
  clientMutationId: String
  """Название подраздела"""
  header: String!
  """Путь до подраздела"""
  url: String
}

"""Мутация добавления подраздела."""
type AddSubsectionMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  subsection: SubsectionType!
  """Успех мутации"""
  success: Boolean!
}

input AddTagMutationInput {
  clientMutationId: String
  name: String!
}

"""Добавление тега"""
type AddTagMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
  """Добавленный тег"""
  tag: TagType
}

input AddTeamMutationInput {
  """Год образования группы/поступления"""
  admission: Int!
  clientMutationId: String
  """Группа, от которой назначаем права пользователю при добавлении"""
  groupId: ID
  """Название группы"""
  name: String!
  """Родительская группа (Администрация -> Кафедра -> Студенты)"""
  parentId: ID
  """Сокращенное название группы"""
  shortName: String!
}

"""Добавление группы пользователей"""
type AddTeamMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
  """Новая группа пользователей"""
  team: TeamType
}

"""An enumeration."""
enum ApplicationAlgorithm {
  """No OIDC support"""
  A_
  """HMAC with SHA-2 256"""
  HS256
  """RSA with SHA-2 256"""
  RS256
}

"""An enumeration."""
enum ApplicationAuthorizationGrantType {
  """Authorization code"""
  AUTHORIZATION_CODE
  """Client credentials"""
  CLIENT_CREDENTIALS
  """Implicit"""
  IMPLICIT
  """OpenID connect hybrid"""
  OPENID_HYBRID
  """Resource owner password-based"""
  PASSWORD
}

"""An enumeration."""
enum ApplicationClientType {
  """Confidential"""
  CONFIDENTIAL
  """Public"""
  PUBLIC
}

"""Приложение."""
type ApplicationType implements Node {
  accesstokenSet: [AccessTokenType!]!
  algorithm: ApplicationAlgorithm
  authorizationGrantType: ApplicationAuthorizationGrantType!
  clientId: String!
  clientSecret: String!
  clientType: ApplicationClientType!
  created: DateTime!
  """The ID of the object."""
  id: ID!
  name: String!
  """Allowed URIs list, space separated"""
  redirectUris: String!
  skipAuthorization: Boolean!
  updated: DateTime!
  user: UserType
}

"""Описание типа индексирования публикации."""
type ArticleIndexType {
  """Коэффициент учета"""
  coefficient: Float!
  """Дата создания"""
  createdAt: DateTime!
  id: ID!
  """Название рецензирования"""
  name: String!
  """Дата обновления"""
  updatedAt: DateTime!
}

"""Тип публикации"""
type ArticleKindType {
  """Дата создания"""
  createdAt: DateTime!
  id: ID!
  """Название типа публикации"""
  name: String!
  """Дата обновления"""
  updatedAt: DateTime!
}

"""Статья."""
type ArticleType implements Node {
  """Дополнительные параметры"""
  additionalText: String!
  """Авторы"""
  authors: [AuthorType!]!
  """Дата создания"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Тип индексирования статьи"""
  index: ArticleIndexType
  """Тип публикации"""
  kind: ArticleKindType
  """Выходные параметры статьи"""
  name: String!
  """Путь к файлу"""
  src: String!
  """Дата обновления"""
  updatedAt: DateTime!
  """Пользователь, добавивший публикацию"""
  user: UserType!
  """Авторы публикации"""
  users: [UserType!]!
  """Объем работы"""
  workload: Float
  """Год выхода статьи"""
  year: Int!
}

type ArticleTypeConnection {
  """Contains the nodes in this connection."""
  edges: [ArticleTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `ArticleType` and its cursor."""
type ArticleTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: ArticleType
}

"""Прикрепленные файлы """
type AttachedFileType {
  """Дата добавления файла"""
  createdAt: DateTime!
  id: ID!
  """Прикрепленные файлы"""
  messageSet: [MessageType!]!
  """Путь к файлу"""
  src: String!
  """Пользователь, загрузивший файл"""
  user: UserType
}

"""Прикрепленный файл."""
type AttachmentType {
  """Курс"""
  course: CourseType!
  """Дата создания"""
  createdAt: DateTime!
  """Идентификатор"""
  id: ID!
  """Период"""
  period: PeriodType!
  """Файл портфоли"""
  portfolioFile: PortfolioFileType!
  """Дата обновления"""
  updatedAt: DateTime!
}

"""Аттестация."""
type AttestationType implements Node {
  """Пользователь, который подтвердил аттестацию"""
  confirmedBy: UserType
  """Курс"""
  course: CourseType!
  """Дата создания"""
  createdAt: DateTime!
  """Описание"""
  description: String!
  """The ID of the object."""
  id: ID!
  """Период"""
  period: PeriodType!
  """Оценка"""
  registration: RegistrationType!
  """Пользователь, который выставил аттестацию"""
  setBy: UserType!
  """Дата обновления"""
  updatedAt: DateTime!
  """Учайщийся"""
  user: UserType!
}

"""Автор публикации"""
input AuthorInputType {
  """Автор"""
  authorId: ID
  """ФИО автора"""
  name: String!
  """Пользователь"""
  userId: ID
}

"""Автор публикации"""
type AuthorType implements Node {
  """Публикация"""
  article: ArticleType!
  """Дата создания"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Фамилия и инициалы автора"""
  name: String!
  """Позиция в авторах публикации"""
  order: Int!
  """Дата обновления"""
  updatedAt: DateTime!
  """Пользователь"""
  user: UserType
  """Вклад автора в работу"""
  weight: Float!
}

type AuthorTypeConnection {
  """Contains the nodes in this connection."""
  edges: [AuthorTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `AuthorType` and its cursor."""
type AuthorTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: AuthorType
}

"""Тип блока образовательной программы."""
type BlockKindType {
  id: ID!
  """Название"""
  name: String!
  """Позиция для сортировки"""
  order: Int!
}

"""Категория"""
type CategoryType implements Node {
  """Аватар"""
  avatar: String
  """Дочерние категории"""
  children: [CategoryType]!
  """Дата создания"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Соседние категории"""
  nc: [CategoryType]!
  """Страницы"""
  pages(after: String, before: String, category_Id: ID, first: Int, kind_Id: ID, last: Int, offset: Int, title_Icontains: String): PageTypeConnection
  """Родительская категория"""
  parent: CategoryType
  """Позиция вывода"""
  position: Int!
  """Текст"""
  text: String!
  """Дата обновления"""
  updatedAt: DateTime!
  """Пользователь"""
  user: UserType
}

type CategoryTypeConnection {
  """Contains the nodes in this connection."""
  edges: [CategoryTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `CategoryType` and its cursor."""
type CategoryTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: CategoryType
}

input ChangeArticleMutationInput {
  """Дополнительные поля публикации"""
  additional: String!
  """Публикация"""
  articleId: ID!
  """Все авторы публикации"""
  authors: [AuthorInputType!]!
  clientMutationId: String
  """Идентификатор типа индексирования статьи"""
  indexId: ID!
  """Тип публикации"""
  kindId: ID!
  """Название работы"""
  name: String!
  """Объем работы"""
  workload: Float
  """Год публикации"""
  year: Int!
}

"""Изменение публикации."""
type ChangeArticleMutationPayload {
  """Измененная публикация"""
  article: ArticleType
  """Измененные авторы публикации"""
  authors: [AuthorType!]!
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeAttestationMutationInput {
  """Идентификатор аттестации"""
  attestationId: ID!
  clientMutationId: String
  """Идентификатор пользователя, который подтвердил аттестацию"""
  confirmedById: ID
  """Описание"""
  description: String
  """Идентификатор курса"""
  registrationId: ID
  """Идентификатор пользователя, который выставил аттестацию"""
  setById: ID
}

"""Изменение аттестации"""
type ChangeAttestationMutationPayload {
  """Измененная аттестация"""
  attestation: AttestationType
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeAvatarMutationInput {
  clientMutationId: String
  """Загружаемый файл аватара"""
  file: Upload!
  """Идентификатор пользователя"""
  userId: ID!
}

"""Мутация для изменения аватара пользователя."""
type ChangeAvatarMutationPayload {
  """Загруженный аватар"""
  avatar: String!
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeCategoryAvatarMutationInput {
  """Аватар"""
  avatar: Upload
  """Идентификатор мутации"""
  categoryId: ID!
  clientMutationId: String
}

"""Мутация для изменения аватара категории"""
type ChangeCategoryAvatarMutationPayload {
  """Добавленная котегория"""
  category: CategoryType
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeCategoryMutationInput {
  """Идентификатор мутации"""
  categoryId: ID!
  clientMutationId: String
  """Название категории"""
  text: String!
}

"""Мутации для изменения категории"""
type ChangeCategoryMutationPayload {
  """Добавленная котегория"""
  category: CategoryType
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeCategoryParentMutationInput {
  """Идентификатор категории"""
  categoryId: ID!
  clientMutationId: String
  """Идентификатор родителя"""
  parentId: ID
}

"""Мутация для изменения родителя"""
type ChangeCategoryParentMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeCategoryPositionMutationInput {
  """Идентификаторы категорий"""
  categoriesId: [ID]!
  clientMutationId: String
}

"""Мутация для изменения порядка следования вывода категорий"""
type ChangeCategoryPositionMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeChildItemPropMutationInput {
  """Идентификатор дочернего тега"""
  childItemPropId: ID!
  clientMutationId: String
  """Новый заголовок"""
  header: String!
  """Новый дочерний тег"""
  itemProp: String!
  """Новое положение для вывода"""
  showPosition: Int!
}

type ChangeChildItemPropMutationPayload {
  childItemProp: ChildItemPropType!
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeCoursesMutationInput {
  clientMutationId: String
  """Частичные данные курсов"""
  courses: [CourseInputType!]
  """Идентификатор дисциплины"""
  disciplineId: ID!
  """Идентификатор группы"""
  teamId: ID!
}

"""Изменение курсов"""
type ChangeCoursesMutationPayload {
  clientMutationId: String
  """Измененные курсы"""
  courses: [CourseType!]
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Остались ли курсы у группы"""
  hasCourses: Boolean
  """Успех мутации"""
  success: Boolean!
}

input ChangeDirectionMutationInput {
  clientMutationId: String
  """Название"""
  code: String!
  """Идентификатор направления подготовки"""
  directionId: ID!
  """Код специальности"""
  name: String!
}

"""Изменение направления подготовки"""
type ChangeDirectionMutationPayload {
  clientMutationId: String
  """Измененное направление подготовки"""
  direction: DirectionType
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeDisciplineMutationInput {
  """Аннотация к рабочей программе дисциплины/практики/ГИА"""
  annotation: Upload
  clientMutationId: String
  """Код дисциплины"""
  code: String
  """Удалять ли аннотацию"""
  deleteAnnotation: Boolean!
  """Удалять ли файл"""
  deleteWorkProgram: Boolean!
  """Идентификатор дисциплины"""
  disciplineId: ID!
  """Название дисциплины"""
  name: String
  """Родительская дисциплина"""
  parentId: ID
  """Идентификаторы авторов"""
  userIds: [ID!]!
  """Форма представления дисциплины"""
  viewId: ID!
  """Рабочая программа дисциплины"""
  workProgram: Upload
}

"""Изменение дисциплины"""
type ChangeDisciplineMutationPayload {
  clientMutationId: String
  """Измененная дисциплина"""
  discipline: DisciplineType
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeEduFormMutationInput {
  clientMutationId: String
  """Идентификатор формы обучения"""
  eduFormId: ID!
  """Название"""
  name: String!
  """Идентификатор родительской формы обучения"""
  parentId: ID
  """Короткое название"""
  shortName: String!
}

"""Изменение формы обучения"""
type ChangeEduFormMutationPayload {
  clientMutationId: String
  """Измененная форма обучения"""
  eduForm: EduFormType
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeEduProgramMutationInput {
  """Признак адапативности программ"""
  adaptive: Boolean
  """Год поступления"""
  admission: Int
  """Календарный учебный график"""
  calendar: Upload
  clientMutationId: String
  """Удалять ли календарный учебный график"""
  deleteCalendar: Boolean!
  """Удалять ли описание"""
  deleteDescription: Boolean!
  """Удалять ли учебный план"""
  deleteSyllabus: Boolean!
  """Описание"""
  description: Upload
  """Идентификатор направления подготовки"""
  directionId: ID
  """Идентификатор формы обучения"""
  eduFormId: Int
  """Идентификатор образовательной программы"""
  eduProgramId: ID!
  """Ускоренная программа"""
  expedited: Boolean
  """Профиль подготовки"""
  name: String
  """Учебный план"""
  syllabus: Upload
}

"""Изменение образовательной программы."""
type ChangeEduProgramMutationPayload {
  clientMutationId: String
  """Измененая образовательная программа"""
  eduProgram: EduProgramType
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeFileKindMutationInput {
  """Допустимый формат загрузки файлов"""
  accept: String!
  clientMutationId: String
  """Идентификатор типа загружаемых файлов в портфолио"""
  fileKindId: ID!
  """Наименование цели загрузки файла"""
  name: String!
}

"""Изменение типа загружаемых файлов в портфолио"""
type ChangeFileKindMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененный тип загружаемых файлов в портфолио"""
  fileKind: FileKindType
  """Успех мутации"""
  success: Boolean!
}

input ChangeFileMutationInput {
  clientMutationId: String
  """Поле файла"""
  field: String!
  """Идентификатор файла"""
  fileId: ID!
  """Значение поля файла"""
  value: String!
}

"""Мутация для изменения файла"""
type ChangeFileMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененный файл"""
  file: FileType
  """Успех мутации"""
  success: Boolean!
}

input ChangeGroupNameMutationInput {
  clientMutationId: String
  """Идентификатор группы"""
  groupId: Int!
  """Название группы"""
  name: String!
}

"""Мутация для изменения имени группы."""
type ChangeGroupNameMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененная группа"""
  group: GroupType
  """Успех мутации"""
  success: Boolean!
}

input ChangeGroupPermissionsMutationInput {
  """Действие"""
  action: ActionRelationShip!
  clientMutationId: String
  """Идентификатор группы"""
  groupId: Int!
  """Идентификаторы привилегий"""
  permissionsId: [Int]!
}

"""Мутация для изменения привилегий группы."""
type ChangeGroupPermissionsMutationPayload {
  """Действие"""
  action: ActionRelationShip!
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Идентификаторы привилегий"""
  permissionsId: [Int]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeHandoutMutationInput {
  clientMutationId: String
  """Описание раздаточного материала"""
  description: String
  """Идентификатор раздаточного материала"""
  handoutId: ID!
  """Идентификатор периода"""
  periodId: ID
}

"""Изменение раздаточного материала"""
type ChangeHandoutMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененнный раздаточный материал"""
  handout: HandoutType
  """Успех мутации"""
  success: Boolean!
}

input ChangeItemPropContainerMutationInput {
  clientMutationId: String
  """Новый заголовок"""
  header: String!
  """Флаг генерации данных"""
  isGenerated: Boolean!
  """Главный тег"""
  itemProp: String!
  """Идентификатор контейнера"""
  itemPropContainerId: ID!
}

type ChangeItemPropContainerMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  itemPropContainer: ItemPropContainerType!
  """Успех мутации"""
  success: Boolean!
}

input ChangeMemberPropertyMutationInput {
  clientMutationId: String
  """Изменяемое поле"""
  field: String!
  """Идентификатор записи"""
  memberId: ID!
  """Значение"""
  value: Boolean!
}

"""Изменение свойств чата """
type ChangeMemberPropertyMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeMessageStateMutationInput {
  clientMutationId: String
  """Идентификаторы сообщений"""
  messageIds: [ID!]!
  """Изменяемое состояние: delivered|read"""
  state: String!
}

"""Доставка и прочтение сообщений """
type ChangeMessageStateMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeMethodologicalSupportMutationInput {
  clientMutationId: String
  """Идентификатор методического обеспечения"""
  methodologicalSupportId: ID!
  """Подпись файла"""
  name: String!
}

"""Изменение методического обеспечения."""
type ChangeMethodologicalSupportMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененное методическое обеспечение"""
  methodologicalSupport: MethodologicalSupportType
  """Успех мутации"""
  success: Boolean!
}

input ChangeNotificationMutationInput {
  clientMutationId: String
  """Название поля"""
  field: String!
  """Идентификатор уведомления"""
  notificationId: ID!
  """Значение"""
  value: Boolean!
}

"""Изменение уведомления"""
type ChangeNotificationMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeNotificationsMutationInput {
  clientMutationId: String
  """Название поля"""
  field: String!
  """Идентификаторы уведомлений"""
  notificationsId: [ID]!
  """Значение"""
  value: Boolean!
}

"""Изменение всех уведомлений"""
type ChangeNotificationsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangePageAvatarMutationInput {
  """Новый аватар страницы"""
  avatar: Upload
  clientMutationId: String
  """Идентификатор страницы"""
  pageId: ID!
}

"""Изменение аватара на странице"""
type ChangePageAvatarMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененная страница"""
  page: PageType
  """Успех мутации"""
  success: Boolean!
}

input ChangePageBooleanPropertyMutationInput {
  clientMutationId: String
  field: String!
  """Идентификатор страницы"""
  pageId: ID!
  """Значение"""
  value: Boolean!
}

"""Изменение boolean свойств страницы"""
type ChangePageBooleanPropertyMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененная страница"""
  page: PageType
  """Успех мутации"""
  success: Boolean!
}

input ChangePageCategoryMutationInput {
  """Идентификатор категории"""
  categoryId: ID!
  clientMutationId: String
  """Идентификатор страницы"""
  pageId: ID!
}

"""Изменение категории страницы"""
type ChangePageCategoryMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененная страница"""
  page: PageType
  """Успех мутации"""
  success: Boolean!
}

input ChangePageKindMutationInput {
  clientMutationId: String
  """Идентификатор страницы"""
  pageId: ID!
  """Идентификатор типа страницы"""
  pageKindId: Int
}

"""Изменение типа страницы"""
type ChangePageKindMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененная страница"""
  page: PageType
  """Успех мутации"""
  success: Boolean!
}

input ChangePageTagsMutationInput {
  clientMutationId: String
  """Идентификатор страницы"""
  pageId: ID!
  """Теги"""
  tagNames: [String!]!
}

"""Изменения тегов страницы"""
type ChangePageTagsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененная страница"""
  page: PageType
  """Успех мутации"""
  success: Boolean!
}

input ChangePageTitleMutationInput {
  clientMutationId: String
  """Идентификатор страницы"""
  pageId: ID!
  """Заголовок страницы"""
  title: String!
}

"""Изменение названия страницы"""
type ChangePageTitleMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененная страница"""
  page: PageType
  """Успех мутации"""
  success: Boolean!
}

input ChangePasswordMutationInput {
  clientMutationId: String
  """Старый пароль"""
  password: String!
  """Новый пароль"""
  passwordNew: String!
}

"""Мутация для изменения пароля пользователя."""
type ChangePasswordMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangePeriodMutationInput {
  clientMutationId: String
  name: String!
  periodId: Int!
  shortName: String!
}

"""Изменение периода"""
type ChangePeriodMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeProfileValueMutationInput {
  clientMutationId: String
  """Идентификатор записи профиля"""
  profileId: ID!
  """Идентификатор пользователя"""
  userId: ID!
  """Значение записи"""
  value: String!
}

"""Мутация на изменение значения профиля."""
type ChangeProfileValueMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Добавленное значение профиля"""
  profileValue: ProfileValueType
  """Успех мутации"""
  success: Boolean!
}

input ChangeProfileVisibilityMutationInput {
  clientMutationId: String
  """Идентификатор записи"""
  profileValueId: ID!
  """Значение доступности"""
  visibility: Boolean!
}

"""Матция для изменения видимости."""
type ChangeProfileVisibilityMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененное значение поля"""
  profileValue: ProfileValueType
  """Успех мутации"""
  success: Boolean!
}

input ChangeRegistrationMutationInput {
  clientMutationId: String
  name: String!
  registrationId: Int!
  shortName: String!
}

"""Изменение регистрации"""
type ChangeRegistrationMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input ChangeRowMutationInput {
  clientMutationId: String
  """Позиция данных"""
  index: Int!
  """Идентификатор контейнера"""
  itemPropContainerId: ID!
  """Новые значения"""
  values: [String]!
}

"""Мутация изменения данных."""
type ChangeRowMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  itemPropContainer: ItemPropContainerType!
  """Успех мутации"""
  success: Boolean!
}

input ChangeSectionFilesMutationInput {
  clientMutationId: String
  """Загружаемые изображения"""
  newFiles: [Upload!]
  """Изображения"""
  oldFiles: [ID!]!
  """Идентификатор секции"""
  sectionId: ID!
  """Текст мутации"""
  text: String!
}

"""Изменение текста секции"""
type ChangeSectionFilesMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Секция галереи"""
  section: SectionFilesType
  """Успех мутации"""
  success: Boolean!
}

input ChangeSectionGalleryMutationInput {
  clientMutationId: String
  """Загружаемые изображения"""
  newImages: [Upload!]
  """Изображения"""
  oldImages: [ID!]!
  """Идентификатор секции"""
  sectionId: ID!
  """Текст мутации"""
  text: String!
}

"""Изменение текста секции"""
type ChangeSectionGalleryMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Секция галереи"""
  section: SectionGalleryType
  """Успех мутации"""
  success: Boolean!
}

input ChangeSectionTextMutationInput {
  clientMutationId: String
  """Идентификатор секции"""
  sectionId: ID!
  """Текст мутации"""
  text: String!
}

"""Изменение текста секции"""
type ChangeSectionTextMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Текстовая секция"""
  section: SectionTextType
  """Успех мутации"""
  success: Boolean!
}

input ChangeSettingsMutationInput {
  clientMutationId: String
  """Идентификатор настройки"""
  key: String!
  """Идентификатор пользователя"""
  userId: ID!
  """Значение настройки"""
  value: String!
}

"""Мутация для изменения настроек"""
type ChangeSettingsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Измененная настройка"""
  setting: SettingType
  """Успех мутации"""
  success: Boolean!
}

input ChangeSubsectionMutationInput {
  clientMutationId: String
  """Новое название подраздела"""
  header: String!
  """Идентификатор подраздела"""
  subsectionId: ID!
  """Новый путь до подраздела"""
  url: String
}

"""Мутация изменения подраздела."""
type ChangeSubsectionMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  subsection: SubsectionType!
  """Успех мутации"""
  success: Boolean!
}

input ChangeTeamDeleteMutationInput {
  clientMutationId: String
  """Удалена ли группа (закончено обучение)"""
  delete: Boolean!
  """Идентификатор группы пользователей"""
  teamId: ID!
}

"""Мягкое удаление или восстановление группы пользователей"""
type ChangeTeamDeleteMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
  """Измененная группа"""
  team: TeamType
}

input ChangeTeamEduProgramMutationInput {
  clientMutationId: String
  """Идентификатор образовательной программы"""
  eduProgramId: ID
  """Идентификатор группы пользователей"""
  teamId: ID!
  """Переносить курсы с удалением ненайденных"""
  transferCourses: Boolean!
}

"""Изменение образовательной программы для группы пользователей"""
type ChangeTeamEduProgramMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
  """Измененная группа"""
  team: TeamType
}

input ChangeTeamMutationInput {
  """Год образования группы/поступления"""
  admission: Int
  clientMutationId: String
  groupId: ID
  """Название группы"""
  name: String
  """Родительская группа (Администрация -> Кафедра -> Студенты)"""
  parentId: ID
  """Сокращенное название группы"""
  shortName: String
  """Идентификатор группы пользователей"""
  teamId: ID!
}

"""Изменения группы пользователей"""
type ChangeTeamMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
  """Измененная группа"""
  team: TeamType
}

input ChangeTeamResponsibleUsersMutationInput {
  clientMutationId: String
  """Идентификатор группы пользователей"""
  teamId: ID!
  """Идентификаторы пользователей"""
  usersId: [ID!]!
}

"""Изменение ответственных пользователей в группе"""
type ChangeTeamResponsibleUsersMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
  """Измененная группа"""
  team: TeamType
}

input ChangeUserGroupsMutationInput {
  clientMutationId: String
  """Идентификатор групп"""
  groupsId: [Int]!
  """Идентификатор пользователя"""
  userId: ID!
}

"""Мутация для изменения групп конкретного пользователя."""
type ChangeUserGroupsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Новые группы"""
  groups: [GroupType]
  """Успех мутации"""
  success: Boolean!
}

input ChangeUserPropsMutationInput {
  """Дата рождения"""
  birthday: Date!
  clientMutationId: String
  """Email"""
  email: String!
  """Имя"""
  firstName: String!
  """Фамилия"""
  lastName: String!
  """Отчество"""
  sirName: String!
  """Идентификатор пользователя"""
  userId: ID!
}

"""Мутация для изменения полей пользователя."""
type ChangeUserPropsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
  """Измененный пользователь"""
  user: UserType!
}

"""Сообщения чата"""
type ChatMessageType implements Node {
  """Чат"""
  chat: ChatType
  """Дата создания"""
  createdAt: DateTime!
  """Сообщение удалено"""
  deleted: Boolean!
  """Сообщение доставлено"""
  delivered: DateTime
  """Избранное сообщение"""
  favorite: Boolean!
  """The ID of the object."""
  id: ID!
  """Сообщение"""
  message: MessageType
  """Сообщение прочитано"""
  read: DateTime
  """Пользователь"""
  user: UserType
}

type ChatMessageTypeConnection {
  """Contains the nodes in this connection."""
  edges: [ChatMessageTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `ChatMessageType` and its cursor."""
type ChatMessageTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: ChatMessageType
}

"""Подписка на сообщения в выбранном чате """
type ChatMessagesSubscription {
  """Действие пользователя"""
  action: ConsumerActionType!
  """Сообщение"""
  chatMessage: ChatMessageType
  """Идентификатор объекта"""
  id: ID!
}

"""Чат"""
type ChatType {
  """Аватар"""
  avatar: String
  """Дата создания"""
  createdAt: DateTime!
  id: ID!
  """Последнее сообщение"""
  lastMessage: MessageType
  """Название"""
  name: String
  """Дата изменения"""
  updatedAt: DateTime!
  """Организатор чата"""
  user: UserType!
  """Участники чата"""
  users: [UserType!]!
}

input ChildItemPropInputType {
  """Заголовок столбца"""
  header: String!
  """Дочерний тег"""
  itemProp: String!
}

type ChildItemPropType implements Node {
  """Подпись к единице информации"""
  header: String!
  """The ID of the object."""
  id: ID!
  """Дочерний тег"""
  itemProp: String!
  """Позиция дочернего тега при выводе"""
  showPosition: Int!
  """Индекс под которым хранится данные с тегом"""
  valuePosition: Int!
}

"""Комментарии"""
type CommentType implements Node {
  """Дочерние комментарии"""
  children: [CategoryType]!
  """Дата создания"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Страница"""
  page: PageType!
  """Рейтинг"""
  rating: Int!
  """Текст"""
  text: String!
  """Дата обновления"""
  updatedAt: DateTime!
  """Пользователь, оставивший комментарий"""
  user: UserType!
}

type CommentTypeConnection {
  """Contains the nodes in this connection."""
  edges: [CommentTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `CommentType` and its cursor."""
type CommentTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: CommentType
}

"""Компетенция."""
type CompetenceType implements Node {
  """Категория"""
  category: String!
  """Код"""
  code: String!
  """The ID of the object."""
  id: ID!
  """Название"""
  name: String!
}

type CompetenceTypeConnection {
  """Contains the nodes in this connection."""
  edges: [CompetenceTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `CompetenceType` and its cursor."""
type CompetenceTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: CompetenceType
}

input ConfirmEmailMutationInput {
  clientMutationId: String
  """Код, полученный по Email"""
  code: String!
  """Email адрес"""
  email: String!
}

"""Подтверждение кода."""
type ConfirmEmailMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
  """Пользователь"""
  user: UserType
}

input ConfirmPortfolioFileMutationInput {
  clientMutationId: String
  """Идентификатор файла портфолио"""
  portfolioFileId: ID!
}

"""Подтверждение файла портфолио"""
type ConfirmPortfolioFileMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Пользователь, подтвердивший файл портфолио"""
  portfolioFile: PortfolioFileType
  """Успех мутации"""
  success: Boolean!
}

"""
Типы уведомления пользователей
- CONNECT - Присоединился
- DISCONNECT - Отсоединился
- ADD - Пользователь добавил данные (по умолчанию)
- CHANGE - Пользователь изменил данные
- DELETE - Удаление объекта
- ERROR - Ошибка ввода данных
- TYPING - Печатет, готовиться отправить сообщение
- TYPING_FINISH - Закончил печатать
- EXCEPTION - Пользователь исключен из потока уведомлений
"""
enum ConsumerActionType {
  ADD
  CHANGE
  CONNECT
  DELETE
  DISCONNECT
  ERROR
  EXCEPTION
  TYPING
  TYPING_FINISH
}

"""Тип модели Django."""
type ContentTypeType {
  appLabel: String!
  id: ID!
  """Модель, связанная с действием"""
  logentrySet(action_Contains: String, after: String, before: String, contentType_Model_Icontains: String, createdAt_Gt: DateTime, createdAt_Gte: DateTime, createdAt_Lt: DateTime, createdAt_Lte: DateTime, first: Int, last: Int, objectId_Icontains: String, offset: Int): LogEntryTypeConnection!
  model: String!
  permissionSet: [PermissionType!]!
}

"""Частичные входные данные курса."""
input CourseInputType {
  """Идентификатор часов по плану"""
  eduHoursId: ID!
  """Идентификаторы периодов обучения"""
  periodIds: [ID!]
  """Идентификаторы преподавателей"""
  teacherIds: [ID!]
}

"""Курс."""
type CourseType implements Node {
  """Прикрепленные файлы"""
  attachments: [AttachmentType!]
  """Аттестации"""
  attestations: [AttestationType!]
  """Дата создания"""
  createdAt: DateTime!
  """Часы по плану"""
  eduHours: EduHoursType!
  """Раздаточные материалы"""
  handouts: [HandoutType!]
  """The ID of the object."""
  id: ID!
  """Периоды обучения"""
  periods: [PeriodType!]
  """Номер семестра с учетом номера курса"""
  semester: Int
  """Преподаватели курса"""
  teachers: [UserType!]
  """Группа пользователей, которая обучается"""
  team: TeamType!
  """Дата обновления"""
  updatedAt: DateTime!
}

type CourseTypeConnection {
  """Contains the nodes in this connection."""
  edges: [CourseTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `CourseType` and its cursor."""
type CourseTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: CourseType
}

"""
The `Date` scalar type represents a Date
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar Date

"""Информация по показателям во временной развертке."""
type DateStatisticsType {
  """Дата"""
  date: Date!
  """Значение"""
  value: Float!
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

input DeleteArticleMutationInput {
  """Идентификатор файла публикации"""
  articleId: ID!
  clientMutationId: String
  """Пользователь"""
  userId: ID!
}

"""Удаление публикации."""
type DeleteArticleMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteAttachmentsMutationInput {
  """Идентификаторы прикрепленных файлов"""
  attachmentIds: [ID!]!
  clientMutationId: String
}

"""Удаление прикрепленных файлов"""
type DeleteAttachmentsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteAttestationMutationInput {
  """Идентификатор аттестации"""
  attestationId: ID!
  clientMutationId: String
}

"""Удаление аттестации"""
type DeleteAttestationMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteCategoryMutationInput {
  """Идентификатор мутации"""
  categoryId: ID!
  clientMutationId: String
}

"""Мутация для удаления категории"""
type DeleteCategoryMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteChildItemPropMutationInput {
  """
  Идентификатор модели "Дочерний тег"
  """
  childItemPropId: ID!
  clientMutationId: String
}

"""
Удаление записи модели "ChildItemProp"
"""
type DeleteChildItemPropMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteCompetenceMutationInput {
  clientMutationId: String
  """Идентификатор компетенции"""
  competenceId: ID!
  """Идентификатор дисциплины"""
  disciplineId: ID!
}

"""Удаление компетенций"""
type DeleteCompetenceMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Идентификатор компетенции"""
  id: ID!
  """Успех мутации"""
  success: Boolean!
}

input DeleteCourseMutationInput {
  clientMutationId: String
  """Идентификатор курса"""
  courseId: ID!
}

"""Удаление курса"""
type DeleteCourseMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteCoursesMutationInput {
  clientMutationId: String
  """Идентификатор группы"""
  teamId: ID!
}

"""Удаление всех курсов группы"""
type DeleteCoursesMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteDirectionMutationInput {
  clientMutationId: String
  """
  Идентификатор модели "Направление подготовки"
  """
  directionId: ID!
}

"""
Удаление записи модели "Direction"
"""
type DeleteDirectionMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteDisciplineMutationInput {
  clientMutationId: String
  """Идентификатор дисциплины"""
  disciplineId: ID!
}

"""Удаление дисциплины"""
type DeleteDisciplineMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Идентификатор дисциплины"""
  id: ID!
  """Успех мутации"""
  success: Boolean!
}

input DeleteEduFormMutationInput {
  clientMutationId: String
  """
  Идентификатор модели "Форма обучения"
  """
  eduFormId: ID!
}

"""
Удаление записи модели "EduForm"
"""
type DeleteEduFormMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteEduHourMutationInput {
  clientMutationId: String
  """Идентификатор вида работ"""
  eduHourId: ID!
}

"""Удаление часов по плану"""
type DeleteEduHourMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Идентификатор вида работ"""
  id: ID!
  """Успех мутации"""
  success: Boolean!
}

input DeleteEduProgramMutationInput {
  clientMutationId: String
  """Идентификатор образовательной программы"""
  eduProgramId: ID!
}

"""Удаление образовательной программы."""
type DeleteEduProgramMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Идентификатор образовательной программы"""
  id: ID!
  """Успех мутации"""
  success: Boolean!
}

input DeleteFileKindMutationInput {
  clientMutationId: String
  """
  Идентификатор модели "Тип загружаемых файлов в портфолио"
  """
  fileKindId: ID!
}

"""
Удаление записи модели "FileKind"
"""
type DeleteFileKindMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteFileMutationInput {
  clientMutationId: String
  """Идентификатор файла"""
  fileId: ID!
}

"""Мутация для полного удаления файла"""
type DeleteFileMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Идентификатор удаляемого файла"""
  id: ID!
  """Успех мутации"""
  success: Boolean!
}

input DeleteGroupMutationInput {
  clientMutationId: String
  """Идентификатор группы"""
  groupId: Int!
}

"""Мутация для удаления группы."""
type DeleteGroupMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Идентификатор группы"""
  id: ID!
  """Успех мутации"""
  success: Boolean!
}

input DeleteHandoutsMutationInput {
  clientMutationId: String
  """Идентификаторы раздаточных материалов"""
  handoutIds: [ID!]!
}

"""Удаление раздаточных материалов"""
type DeleteHandoutsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteItemPropContainerMutationInput {
  clientMutationId: String
  """
  Идентификатор модели "Контейнер с данными и структурой"
  """
  itemPropContainerId: ID!
}

"""
Удаление записи модели "ItemPropContainer"
"""
type DeleteItemPropContainerMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteJobMutationInput {
  clientMutationId: String
  """
  Идентификатор модели "Место работы пользователя"
  """
  jobId: ID!
}

"""
Удаление записи модели "Job"
"""
type DeleteJobMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteJobPostMutationInput {
  clientMutationId: String
  """
  Идентификатор модели "Должность пользователя на месте работы"
  """
  jobPostId: ID!
}

"""
Удаление записи модели "JobPost"
"""
type DeleteJobPostMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteMemberMutationInput {
  clientMutationId: String
  """Идентификатор записи"""
  memberId: ID!
}

"""Удаление чата """
type DeleteMemberMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteMessagesInput {
  """Идентификатор чата"""
  chatId: ID!
  clientMutationId: String
  """Удалять для всех"""
  forEveryone: Boolean!
  """Идентификаторы сообщений"""
  messageIds: [ID!]!
}

"""Удаление сообщения """
type DeleteMessagesPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteMethodologicalSupportMutationInput {
  clientMutationId: String
  """Идентификатор методического обеспечения"""
  methodologicalSupportId: ID!
}

"""Удаление методического обеспечения"""
type DeleteMethodologicalSupportMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Идентификатор методического обеспечения"""
  id: ID!
  """Успех мутации"""
  success: Boolean!
}

input DeleteNoticeMutationInput {
  clientMutationId: String
  """Идентификатор уведомления"""
  noticeId: ID!
}

"""Удаление всех уведомлений"""
type DeleteNoticeMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeletePageMutationInput {
  clientMutationId: String
  pageId: ID!
}

"""Удаление страницы"""
type DeletePageMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeletePeriodMutationInput {
  clientMutationId: String
  periodId: Int!
}

"""Удаление периода"""
type DeletePeriodMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeletePortfolioFileMutationInput {
  clientMutationId: String
  """
  Идентификатор модели "Файл в портфолио"
  """
  portfolioFileId: ID!
}

"""
Удаление записи модели "PortfolioFile"
"""
type DeletePortfolioFileMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteProfileMutationInput {
  clientMutationId: String
  """Идентификатор записи"""
  profileId: Int!
}

"""Мутация для удаления записи профиля."""
type DeleteProfileMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteRegistrationMutationInput {
  clientMutationId: String
  registrationId: Int!
}

"""Удаление регистрации"""
type DeleteRegistrationMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteRowMutationInput {
  clientMutationId: String
  """Позиция данных"""
  index: Int
  """Идентификатор контейнера"""
  itemPropContainerId: ID!
}

"""Мутация удаления данных."""
type DeleteRowMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  itemPropContainer: ItemPropContainerType!
  """Успех мутации"""
  success: Boolean!
}

input DeleteSectionMutationInput {
  clientMutationId: String
  """Идентификатор секции"""
  sectionId: ID!
}

"""Удаление секции"""
type DeleteSectionMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteSessionsMutationInput {
  clientMutationId: String
}

"""Мутация для удаления всех сессий кроме текущей."""
type DeleteSessionsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteSubsectionMutationInput {
  clientMutationId: String
  """
  Идентификатор модели "Подраздел"
  """
  subsectionId: ID!
}

"""
Удаление записи модели "Subsection"
"""
type DeleteSubsectionMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input DeleteTeamMutationInput {
  clientMutationId: String
  """
  Идентификатор модели "Группа пользователей"
  """
  teamId: ID!
}

"""
Удаление записи модели "Team"
"""
type DeleteTeamMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

"""Направление подготовки."""
type DirectionType implements Node {
  """Дочерние направления"""
  children: [DirectionType]
  """Код специальности"""
  code: String!
  """Теперь не проводиться обучения по данному направлению"""
  delete: Boolean!
  """Образовательная услуга"""
  eduService: EduServiceType!
  """The ID of the object."""
  id: ID!
  """Название"""
  name: String!
  """Секретное направление подготовки"""
  secret: Boolean!
}

"""Тип дисциплины."""
type DisciplineKindType {
  id: ID!
  """Название"""
  name: String!
  """Позиция для сортировки"""
  order: Int!
}

"""Дисциплина."""
type DisciplineType implements Node {
  """Аннотация к рабочей программе дисциплины/практики/ГИА"""
  annotation: String
  """Электронная подпись аннотации к рабочей программе дисциплины/практики/ГИА"""
  annotationSign: String
  """Код"""
  code: String!
  """Дата создания"""
  createdAt: DateTime!
  """Образовательная программа"""
  eduProgram: EduProgramType!
  """The ID of the object."""
  id: ID!
  """Методическое обеспечение"""
  methodologicalSupport: [MethodologicalSupportType!]!
  """Название"""
  name: String!
  """Позиция для сортировки"""
  order: Int!
  """Родительская дисциплина"""
  parent: DisciplineType
  """Дата обновления"""
  updatedAt: DateTime!
  """Авторы"""
  users: [UserType!]!
  """Форма представления"""
  view: DisciplineViewType!
  """Рабочая программа дисциплины"""
  workProgram: String
  """Электронная подпись рабочей программы дисциплины"""
  workProgramSign: String
}

type DisciplineTypeConnection {
  """Contains the nodes in this connection."""
  edges: [DisciplineTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `DisciplineType` and its cursor."""
type DisciplineTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: DisciplineType
}

"""Форма представления дисциплины (Базовая, Выборная, Альтернативная)."""
type DisciplineViewType {
  id: ID!
  """Название"""
  name: String!
  """Позиция для сортировки"""
  order: Int!
}

"""Debugging information for the current query."""
type DjangoDebug {
  """Executed SQL queries for this API query."""
  sql: [DjangoDebugSQL]
}

"""Represents a single database query made to a Django managed DB."""
type DjangoDebugSQL {
  """The Django database alias (e.g. 'default')."""
  alias: String!
  """Duration of this database query in seconds."""
  duration: Float!
  """Postgres connection encoding if available."""
  encoding: String
  """Whether this database query was a SELECT."""
  isSelect: Boolean!
  """Whether this database query took more than 10 seconds."""
  isSlow: Boolean!
  """Postgres isolation level if available."""
  isoLevel: String
  """JSON encoded database query parameters."""
  params: String!
  """The raw SQL of this query, without params."""
  rawSql: String!
  """The actual SQL sent to this database."""
  sql: String
  """Start time of this database query."""
  startTime: Float!
  """Stop time of this database query."""
  stopTime: Float!
  """Postgres transaction ID if available."""
  transId: String
  """Postgres transaction status if available."""
  transStatus: String
  """The type of database being used (e.g. postrgesql, mysql, sqlite)."""
  vendor: String!
}

"""Цикл образовательных программ."""
type EduCycleType {
  """Тип блока образовательной программы"""
  blockKind: BlockKindType!
  """Код"""
  code: String!
  """Тип дисциплины"""
  disciplineKind: DisciplineKindType!
  id: ID!
  """Название"""
  name: String!
  """Порядок сортировки"""
  order: Int!
}

"""Форма обучения."""
type EduFormType {
  id: ID!
  """Название"""
  name: String!
  """Родительская форма обучения"""
  parent: EduFormType
  """Короткое название"""
  shortName: String!
}

"""Часы по плану."""
type EduHoursType {
  """Курс"""
  courseNumber: Int!
  """Дисциплина"""
  discipline: DisciplineType!
  """Тип часов"""
  hoursKind: HoursKindType!
  id: ID!
  """Семестр"""
  semesterNumber: Int!
  """Значение"""
  value: Float!
  """Вид работ"""
  workKind: WorkKindType!
}

"""Статистика образовательных программ."""
type EduProgramStatisticsType {
  """Год набора"""
  admission: Int!
  """Код образовательной программы"""
  directionCode: String!
  """Название образовательной программы"""
  directionName: String!
  """Форма обучения"""
  eduForm: String!
  """Идентификатор записи"""
  id: ID!
  """Имя образовательной программы"""
  name: String!
  """Значения показателей"""
  points: [PointTotalStatisticsType]!
}

"""Образовательная программа."""
type EduProgramType implements Node {
  """Признак адапативности программ"""
  adaptive: Boolean!
  """Год поступления"""
  admission: Int!
  """Календарный учебный график"""
  calendar: String
  """Электронная подпись календарного учебного графика"""
  calendarSign: String
  """Дата создания"""
  createdAt: DateTime!
  """Описание"""
  description: String
  """Электронная подпись описания"""
  descriptionSign: String
  """Направление подготовки"""
  direction: DirectionType!
  """Дисциплины"""
  disciplines: [DisciplineType]!
  """Форма обучения"""
  eduForm: EduFormType!
  """Ускоренная программа"""
  expedited: Boolean!
  """The ID of the object."""
  id: ID!
  """Профиль подготовки"""
  name: String!
  """Учебный план"""
  syllabus: String
  """Электронная подпись учебного плана"""
  syllabusSign: String
  """Дата обновления"""
  updatedAt: DateTime!
}

type EduProgramTypeConnection {
  """Contains the nodes in this connection."""
  edges: [EduProgramTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `EduProgramType` and its cursor."""
type EduProgramTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: EduProgramType
}

"""Образовательная услуга (Бакалавриат, Специалитет)."""
type EduServiceType {
  id: ID!
  """Название"""
  name: String!
}

"""Ошибка в поле формы"""
type ErrorFieldType {
  """Поле формы"""
  field: String!
  """Ошибки"""
  messages: [String!]!
}

input FavoriteMessageInput {
  clientMutationId: String
  """Идентификатор сообщения"""
  messageId: ID!
}

"""Добавление сообщения в избранные """
type FavoriteMessagePayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

"""Тип загружаемых файлов в портфолио."""
type FileKindType {
  """Допустимый формат загрузки файлов"""
  accept: String!
  """Дата создания"""
  createdAt: DateTime!
  id: ID!
  """Наименование цели загрузки файла"""
  name: String!
  """Дата обновления"""
  updatedAt: DateTime!
}

"""Файл пользователя."""
type FileType implements Node {
  """Дата добавления файла"""
  createdAt: DateTime!
  """Помечаем удаленный файл"""
  deleted: Boolean!
  """Расширение файла"""
  ext: String
  """The ID of the object."""
  id: ID!
  """Название файла"""
  name: String!
  """Размер файла в байтах"""
  size: Int
  """Путь к файлу"""
  src: String!
  """Дата обновления файла"""
  updatedAt: DateTime!
  """Пользователь, добавивший файл"""
  user: UserType
}

type FileTypeConnection {
  """Contains the nodes in this connection."""
  edges: [FileTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `FileType` and its cursor."""
type FileTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: FileType
}

input GenerateTeamNewPasswordsMutationInput {
  clientMutationId: String
  """Дата генерации паролей"""
  date: String!
  """Идентификатор группы пользователей"""
  teamId: ID!
  """Идентификаторы пользователей"""
  usersId: [ID!]!
}

"""Генерация паролей заданным пользователям"""
type GenerateTeamNewPasswordsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Ссылка на сгенерированный файл"""
  src: String
  """Успех мутации"""
  success: Boolean!
}

input GetTokenMutationInput {
  """Открытый идентификатор приложения"""
  clientId: String
  clientMutationId: String
  """Секретный идентификатор приложения"""
  clientSecret: String
  """Тип авторизации"""
  grantType: String
  """Пароль"""
  password: String
  """Имя пользователя"""
  username: String
}

"""Мутация для получения токена авторизации."""
type GetTokenMutationPayload {
  """Токен доступа"""
  accessToken: String
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Время жизни токена"""
  expiresIn: Int
  """Токен обновления"""
  refreshToken: String
  """Разрешения"""
  scope: String
  """Успех мутации"""
  success: Boolean!
  """Тип токена"""
  tokenType: String
  """Авторизованный пользователь"""
  user: UserType
}

"""Группа пользователей."""
type GroupType {
  id: ID!
  name: String!
  permissions: [PermissionType!]!
  """Группа прав"""
  teamSet(admission_Icontains: String, after: String, before: String, courseCount: Float, courseCount_Gt: Float, first: Int, last: Int, name_Icontains: String, offset: Int, shortName_Icontains: String): TeamTypeConnection!
  """Группы, к которым принадлежит данный пользователь. Пользователь получит все права, указанные в каждой из его/её групп."""
  userSet(after: String, before: String, email_Icontains: String, first: Int, firstName_Icontains: String, last: Int, lastName_Icontains: String, offset: Int, sirName_Icontains: String, username_Icontains: String): UserTypeConnection!
}

"""Раздаточный материал для курса."""
type HandoutType implements Node {
  """Курс"""
  course: CourseType!
  """Дата создания"""
  createdAt: DateTime!
  """Описание раздаточного материала"""
  description: String!
  """Файл пользователя"""
  file: FileType!
  """The ID of the object."""
  id: ID!
  """Период обучения"""
  period: PeriodType
  """Дата обновления"""
  updatedAt: DateTime!
  """Пользователь, который загрузил файл"""
  user: UserType
}

type HandoutTypeConnection {
  """Contains the nodes in this connection."""
  edges: [HandoutTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `HandoutType` and its cursor."""
type HandoutTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: HandoutType
}

"""Тип часов."""
type HoursKindType {
  id: ID!
  """Название"""
  name: String!
}

input ItemPropContainerInputType {
  """Заголовок структуры данных"""
  header: String!
  """Структура данных"""
  schema: ItemPropInputType!
}

type ItemPropContainerType implements Node {
  """Подпись к данным"""
  header: String!
  """The ID of the object."""
  id: ID!
  """Флаг, что данные заполняются автоматически"""
  isGenerated: Boolean!
  schema: ItemPropType
  values: [[String]]!
}

input ItemPropInputType {
  """Дочерние теги"""
  childItemProps: [ChildItemPropInputType]!
  """Главный тег"""
  itemProp: String!
}

type ItemPropType implements Node {
  children: [ChildItemPropType!]
  """The ID of the object."""
  id: ID!
  """Главный тег"""
  itemProp: String!
}

"""
Allows use of a JSON String for input / output from the GraphQL schema.

Use of this type is *not recommended* as you lose the benefits of having a defined, static
schema (one of the key benefits of GraphQL).
"""
scalar JSONString

"""An enumeration."""
enum JobPostKind {
  """Договор гражданско правового характера"""
  CC
  """Внешний совместитель"""
  EP
  """Внутренний совместитель"""
  IP
  """Основное место работы"""
  MJ
}

"""История стасусов должности пользователя на месте работы"""
type JobPostStatusHistoryType {
  """Дата получения статуса"""
  createdAt: DateTime!
  """Приказ по присвоению статуса в формате docx"""
  decreeDocx: String
  """Приказ по присвоению статуса в формате pdf"""
  decreePdf: String
  """Дата потери статуса"""
  endAt: DateTime
  id: ID!
  """Место работы пользователя"""
  job: JobType!
  """Статус места работы пользователя"""
  status: JobPostStatusType!
}

"""Статус должности пользователя на месте работы"""
type JobPostStatusType {
  """Является ли статус активным"""
  active: Boolean!
  id: ID!
  """Название"""
  name: String!
  """Позиция для сортировки"""
  order: Int!
  """Шаблон docx для формрования приказа по присвоению статуса"""
  templateDocx: String
  """Шаблон xml для формирования приказа по присвоению статуса"""
  templateXml: String
}

"""Должность пользователя на месте работы"""
type JobPostType {
  id: ID!
  """Место работы пользователя"""
  job: JobType!
  """Тип работы"""
  kind: JobPostKind!
  """Должность пользователя на месте работы"""
  post: PostType!
  """Занимаемая ставка"""
  rate: Float!
  """История статусов"""
  statusHistory: [JobPostStatusHistoryType!]!
}

"""Место работы пользователя"""
type JobType {
  id: ID!
  """Должности пользователя на месте работы"""
  jobPosts: [JobPostType!]!
  """Группа"""
  team: TeamType!
  """Пользователь"""
  user: UserType!
}

"""An enumeration."""
enum LogEntryAction {
  """addition"""
  A_1
  """change"""
  A_2
  """deletion"""
  A_3
}

"""Логирование действия пользователя."""
type LogEntryType implements Node {
  """Действие пользователя"""
  action: LogEntryAction!
  """Модель, связанная с действием"""
  contentType: ContentTypeType
  """Дата и время действия"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Идентификатор модели"""
  objectId: String
  """Измененные данные"""
  payload: JSONString!
  """Сессия пользователя"""
  session: SessionType
}

type LogEntryTypeConnection {
  """Contains the nodes in this connection."""
  edges: [LogEntryTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `LogEntryType` and its cursor."""
type LogEntryTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: LogEntryType
}

"""Лог запроса."""
type LogRequestType implements Node {
  """Дата и время запроса"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Страница, с которой отправлен запрос"""
  page: String
  """Сессия пользователя"""
  session: SessionType
  """Время работы страницы"""
  time: Float!
}

type LogRequestTypeConnection {
  """Contains the nodes in this connection."""
  edges: [LogRequestTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `LogRequestType` and its cursor."""
type LogRequestTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: LogRequestType
}

input LogoutMutationInput {
  clientMutationId: String
  """Идентификатор сессии"""
  sessionId: ID!
}

"""Мутация выхода"""
type LogoutMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

"""Оповещение"""
type MailingType {
  """Адрес отправки"""
  address: String!
  """Массив прикрепленных файлов"""
  attachments: JSONString
  """Дата добавления"""
  createdAt: DateTime!
  """Средства отправки"""
  dispatchers: JSONString!
  """Заголовок сообщения"""
  header: String!
  id: ID!
  """Текст сообщения"""
  text: String!
  """Пользователь"""
  user: UserType!
}

"""An enumeration."""
enum MemberRole {
  """participant"""
  A_0
  """administrator"""
  A_1
}

"""Участники чата"""
type MemberType implements Node {
  """Чат"""
  chat: ChatType
  """Дата добавления"""
  createdAt: DateTime!
  """Исключен ли пользователь из чата"""
  excluded: Boolean!
  """Избранный чат"""
  favorite: Boolean!
  """The ID of the object."""
  id: ID!
  """Уведомлять о сообщениях"""
  notification: Boolean!
  """Роль пользователя"""
  role: MemberRole!
  """Дата изменения"""
  updatedAt: DateTime!
  """Пользователь"""
  user: UserType
}

type MemberTypeConnection {
  """Contains the nodes in this connection."""
  edges: [MemberTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `MemberType` and its cursor."""
type MemberTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: MemberType
}

"""
Подписка на добавления чатов
    - member_id - идентификатор объекта
"""
type MembersSubscription {
  """Действие пользователя"""
  action: ConsumerActionType!
  """Идентификатор объекта"""
  id: ID!
  member: MemberType
  update: Boolean
}

"""Сообщение пользователя"""
type MessageType {
  """Прикрепленные файлы"""
  attachedFiles: [AttachedFileType!]!
  """Дата создания"""
  createdAt: DateTime!
  """Пересланные сообщения"""
  forwarded: [MessageType]
  id: ID!
  """Закреплено ли сообщение"""
  pinned: Boolean!
  """Текст сообщения"""
  text: String!
  """Дата изменения"""
  updatedAt: DateTime!
  """Пользователь, создавший сообщение"""
  user: UserType
}

"""Методическое обеспечение дисциплины."""
input MethodologicalSupportInputType {
  """Подпись файла"""
  name: String!
  """Файл"""
  src: Upload!
}

"""Методическое обеспечение."""
type MethodologicalSupportType implements Node {
  """Дата создания"""
  createdAt: DateTime!
  """Дисциплина"""
  discipline: DisciplineType!
  """The ID of the object."""
  id: ID!
  """Подпись файла"""
  name: String!
  """Файл"""
  src: String
  """Электронная подпись файла"""
  srcSign: String
  """Дата обновления"""
  updatedAt: DateTime!
}

type MethodologicalSupportTypeConnection {
  """Contains the nodes in this connection."""
  edges: [MethodologicalSupportTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `MethodologicalSupportType` and its cursor."""
type MethodologicalSupportTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: MethodologicalSupportType
}

"""Мутации на изменение чего-либо"""
type Mutation {
  """Добавление публикации."""
  addArticle(input: AddArticleMutationInput!): AddArticleMutationPayload!
  """Добавление публикации из файла bibtex."""
  addArticleFromBibtex(input: AddArticleFromBibtexMutationInput!): AddArticleFromBibtexMutationPayload!
  """Добавление аттестации"""
  addAttestation(input: AddAttestationMutationInput!): AddAttestationMutationPayload!
  """Мутация для добавления категории"""
  addCategory(input: AddCategoryMutationInput!): AddCategoryMutationPayload!
  """Добавление чата"""
  addChat(input: AddChatMutationInput!): AddChatMutationPayload!
  """Мутация добавления дочернего тега"""
  addChildItemProp(input: AddChildItemPropMutationInput!): AddChildItemPropMutationPayload!
  """Добавление компетенций дисциплины"""
  addCompetences(input: AddCompetencesMutationInput!): AddCompetencesMutationPayload!
  """Добавление курсов"""
  addCourses(input: AddCoursesMutationInput!): AddCoursesMutationPayload!
  """Добавление направления подготовки"""
  addDirection(input: AddDirectionMutationInput!): AddDirectionMutationPayload!
  """Добавление дисциплины."""
  addDiscipline(input: AddDisciplineMutationInput!): AddDisciplineMutationPayload!
  """Добавление методического обеспечения дисциплины."""
  addDisciplineMethodologicalSupports(input: AddDisciplineMethodologicalSupportsMutationInput!): AddDisciplineMethodologicalSupportsMutationPayload!
  """
  Добавление файлов дисциплин (аннотаций и рабочих программ)
  
  Примеры названий файлов в архиве:
  анн_13.03.02_ЭЭ_РЭМС_Б1.В.07_Теория автоматического управления_о_2019.pdf;
  13.03.02_ЭЭ_РЭМС_Б1.В.07_Теория автоматического управления_о_2019.pdf.
  Если дисциплина существует, то к ней прикрепится файл, иначе ошибка.
  """
  addDisciplinesFiles(input: AddDisciplinesFilesMutationInput!): AddDisciplinesFilesMutationPayload!
  """Добавление формы обучения"""
  addEduForm(input: AddEduFormMutationInput!): AddEduFormMutationPayload!
  """Добавление часов по плану дисциплины"""
  addEduHours(input: AddEduHoursMutationInput!): AddEduHoursMutationPayload!
  """Добавление образовательной программы."""
  addEduProgram(input: AddEduProgramMutationInput!): AddEduProgramMutationPayload!
  """Добавление образовательной программы из файла plx."""
  addEduProgramFromPlx(input: AddEduProgramFromPlxMutationInput!): AddEduProgramFromPlxMutationPayload!
  """
  Добавление методического обеспечения дисциплин одной образовательной программы
  
  Пример названия файла в архиве: Б1.О.03_Философия.docx.
  """
  addEduProgramMethodologicalSupports(input: AddEduProgramMethodologicalSupportsMutationInput!): AddEduProgramMethodologicalSupportsMutationPayload!
  """Добавление образовательных программ."""
  addEduPrograms(input: AddEduProgramsMutationInput!): AddEduProgramsMutationPayload!
  """Мутация для загрузки файлов"""
  addFile(input: AddFileMutationInput!): AddFileMutationPayload!
  """Добавление прикрепленных файлов из файлов"""
  addFileAttachments(input: AddFileAttachmentsMutationInput!): AddFileAttachmentsMutationPayload!
  """Добавление типа загружаемых файлов в портфолио"""
  addFileKind(input: AddFileKindMutationInput!): AddFileKindMutationPayload!
  """Мутация для добавления группы."""
  addGroup(input: AddGroupMutationInput!): AddGroupMutationPayload!
  """Добавление раздаточного материала"""
  addHandout(input: AddHandoutMutationInput!): AddHandoutMutationPayload!
  """Мутация добавления структуры"""
  addItemPropContainer(input: AddItemPropContainerMutationInput!): AddItemPropContainerMutationPayload!
  """Добавление пользователя в группу"""
  addJob(input: AddJobMutationInput!): AddJobMutationPayload!
  """Добавление должности пользователя в группе"""
  addJobPost(input: AddJobPostMutationInput!): AddJobPostMutationPayload!
  """Добавление истории статусов должности пользователя на месте работы"""
  addJobPostStatusHistory(input: AddJobPostStatusHistoryMutationInput!): AddJobPostStatusHistoryMutationPayload!
  """Добавления сообщения"""
  addMessage(input: AddMessageMutationInput!): AddMessageMutationPayload!
  """Добавление методического обеспечения"""
  addMethodologicalSupport(input: AddMethodologicalSupportMutationInput!): AddMethodologicalSupportMutationPayload!
  """Добавление страницы"""
  addPage(input: AddPageMutationInput!): AddPageMutationPayload!
  """Добавление периода"""
  addPeriod(input: AddPeriodMutationInput!): AddPeriodMutationPayload!
  """Добавление файла в портфолио"""
  addPortfolioFile(input: AddPortfolioFileMutationInput!): AddPortfolioFileMutationPayload!
  """Добавление прикрепленных файлов из файлов портофолио"""
  addPortfolioFileAttachments(input: AddPortfolioFileAttachmentsMutationInput!): AddPortfolioFileAttachmentsMutationPayload!
  """Добавление файлов в портфолио"""
  addPortfolioFiles(input: AddPortfolioFilesMutationInput!): AddPortfolioFilesMutationPayload!
  """Мутация для добавления записи профиля."""
  addProfile(input: AddProfileMutationInput!): AddProfileMutationPayload!
  """Добавление регистрации"""
  addRegistration(input: AddRegistrationMutationInput!): AddRegistrationMutationPayload!
  """Мутация добавления строки в таблицу"""
  addRow(input: AddRowMutationInput!): AddRowMutationPayload!
  """Добавление секции"""
  addSectionFiles(input: AddSectionFilesMutationInput!): AddSectionFilesMutationPayload!
  """Добавление секции"""
  addSectionGallery(input: AddSectionGalleryMutationInput!): AddSectionGalleryMutationPayload!
  """Добавление секции"""
  addSectionText(input: AddSectionTextMutationInput!): AddSectionTextMutationPayload!
  """Мутация добавления подраздела"""
  addSubsection(input: AddSubsectionMutationInput!): AddSubsectionMutationPayload!
  """Добавление тега"""
  addTag(input: AddTagMutationInput!): AddTagMutationPayload!
  """Добавление группы пользователей"""
  addTeam(input: AddTeamMutationInput!): AddTeamMutationPayload!
  """Изменение публикации."""
  changeArticle(input: ChangeArticleMutationInput!): ChangeArticleMutationPayload!
  """Изменение аттестации"""
  changeAttestation(input: ChangeAttestationMutationInput!): ChangeAttestationMutationPayload!
  """Мутация для изменения аватара пользователя."""
  changeAvatar(input: ChangeAvatarMutationInput!): ChangeAvatarMutationPayload!
  """Мутации для изменения категории"""
  changeCategory(input: ChangeCategoryMutationInput!): ChangeCategoryMutationPayload!
  """Мутация для изменения аватара категории"""
  changeCategoryAvatar(input: ChangeCategoryAvatarMutationInput!): ChangeCategoryAvatarMutationPayload!
  """Мутация для изменения родителя"""
  changeCategoryParent(input: ChangeCategoryParentMutationInput!): ChangeCategoryParentMutationPayload!
  """Мутация для изменения порядка следования вывода категорий"""
  changeCategoryPosition(input: ChangeCategoryPositionMutationInput!): ChangeCategoryPositionMutationPayload!
  """Мутация изменения дочернего тега"""
  changeChildItemProp(input: ChangeChildItemPropMutationInput!): ChangeChildItemPropMutationPayload!
  """Изменение курсов"""
  changeCourses(input: ChangeCoursesMutationInput!): ChangeCoursesMutationPayload!
  """Изменение направления подготовки"""
  changeDirection(input: ChangeDirectionMutationInput!): ChangeDirectionMutationPayload!
  """Изменение дисциплины"""
  changeDiscipline(input: ChangeDisciplineMutationInput!): ChangeDisciplineMutationPayload!
  """Изменение формы обучения"""
  changeEduForm(input: ChangeEduFormMutationInput!): ChangeEduFormMutationPayload!
  """Изменение образовательной программы."""
  changeEduProgram(input: ChangeEduProgramMutationInput!): ChangeEduProgramMutationPayload!
  """Мутация для изменения файла"""
  changeFile(input: ChangeFileMutationInput!): ChangeFileMutationPayload!
  """Изменение типа загружаемых файлов в портфолио"""
  changeFileKind(input: ChangeFileKindMutationInput!): ChangeFileKindMutationPayload!
  """Мутация для изменения имени группы."""
  changeGroupName(input: ChangeGroupNameMutationInput!): ChangeGroupNameMutationPayload!
  """Мутация для изменения привилегий группы."""
  changeGroupPermissions(input: ChangeGroupPermissionsMutationInput!): ChangeGroupPermissionsMutationPayload!
  """Изменение раздаточного материала"""
  changeHandout(input: ChangeHandoutMutationInput!): ChangeHandoutMutationPayload!
  """Мутация изменения контейнера"""
  changeItemPropContainer(input: ChangeItemPropContainerMutationInput!): ChangeItemPropContainerMutationPayload!
  """Изменение свойств чата"""
  changeMemberProperty(input: ChangeMemberPropertyMutationInput!): ChangeMemberPropertyMutationPayload!
  """Прочтение сообщений"""
  changeMessageState(input: ChangeMessageStateMutationInput!): ChangeMessageStateMutationPayload!
  """Изменение методического обеспечения."""
  changeMethodologicalSupport(input: ChangeMethodologicalSupportMutationInput!): ChangeMethodologicalSupportMutationPayload!
  """Изменение свойств уведомления"""
  changeNotification(input: ChangeNotificationMutationInput!): ChangeNotificationMutationPayload!
  """Изменение свойств уведомлений"""
  changeNotifications(input: ChangeNotificationsMutationInput!): ChangeNotificationsMutationPayload!
  """Изменение аватара на странице"""
  changePageAvatar(input: ChangePageAvatarMutationInput!): ChangePageAvatarMutationPayload!
  """Изменение boolean свойств страницы"""
  changePageBooleanProperty(input: ChangePageBooleanPropertyMutationInput!): ChangePageBooleanPropertyMutationPayload!
  """Изменение категории страницы"""
  changePageCategory(input: ChangePageCategoryMutationInput!): ChangePageCategoryMutationPayload!
  """Изменение типа страницы"""
  changePageKind(input: ChangePageKindMutationInput!): ChangePageKindMutationPayload!
  """Изменения тегов страницы"""
  changePageTags(input: ChangePageTagsMutationInput!): ChangePageTagsMutationPayload!
  """Изменение названия страницы"""
  changePageTitle(input: ChangePageTitleMutationInput!): ChangePageTitleMutationPayload!
  """Мутация для изменения пароля пользователя."""
  changePassword(input: ChangePasswordMutationInput!): ChangePasswordMutationPayload!
  """Изменение периода"""
  changePeriod(input: ChangePeriodMutationInput!): ChangePeriodMutationPayload!
  """Мутация на изменение значения профиля."""
  changeProfileValue(input: ChangeProfileValueMutationInput!): ChangeProfileValueMutationPayload!
  """Матция для изменения видимости."""
  changeProfileVisibility(input: ChangeProfileVisibilityMutationInput!): ChangeProfileVisibilityMutationPayload!
  """Изменение регистрации"""
  changeRegistration(input: ChangeRegistrationMutationInput!): ChangeRegistrationMutationPayload!
  """Мутация изменения данных"""
  changeRow(input: ChangeRowMutationInput!): ChangeRowMutationPayload!
  """Изменение текста секции"""
  changeSectionFiles(input: ChangeSectionFilesMutationInput!): ChangeSectionFilesMutationPayload!
  """Изменение текста секции"""
  changeSectionGallery(input: ChangeSectionGalleryMutationInput!): ChangeSectionGalleryMutationPayload!
  """Изменение текста секции"""
  changeSectionText(input: ChangeSectionTextMutationInput!): ChangeSectionTextMutationPayload!
  """Мутация для изменения настроек"""
  changeSettings(input: ChangeSettingsMutationInput!): ChangeSettingsMutationPayload!
  """Мутация изменения подраздела"""
  changeSubsection(input: ChangeSubsectionMutationInput!): ChangeSubsectionMutationPayload!
  """Изменения группы пользователей"""
  changeTeam(input: ChangeTeamMutationInput!): ChangeTeamMutationPayload!
  """Мягкое удаление или восстановление группы пользователей"""
  changeTeamDelete(input: ChangeTeamDeleteMutationInput!): ChangeTeamDeleteMutationPayload!
  """Изменение образовательной программы для группы пользователей"""
  changeTeamEduProgram(input: ChangeTeamEduProgramMutationInput!): ChangeTeamEduProgramMutationPayload!
  """Изменение ответственных пользователей в группе"""
  changeTeamResponsibleUsers(input: ChangeTeamResponsibleUsersMutationInput!): ChangeTeamResponsibleUsersMutationPayload!
  """Мутация для изменения групп конкретного пользователя."""
  changeUserGroups(input: ChangeUserGroupsMutationInput!): ChangeUserGroupsMutationPayload!
  """Мутация для изменения полей пользователя."""
  changeUserProps(input: ChangeUserPropsMutationInput!): ChangeUserPropsMutationPayload!
  """Подтверждение кода."""
  confirmEmail(input: ConfirmEmailMutationInput!): ConfirmEmailMutationPayload!
  """Подтверждение файла портфолио"""
  confirmPortfolioFile(input: ConfirmPortfolioFileMutationInput!): ConfirmPortfolioFileMutationPayload!
  """Удаление публикации."""
  deleteArticle(input: DeleteArticleMutationInput!): DeleteArticleMutationPayload!
  """Удаление прикрепленных файлов"""
  deleteAttachments(input: DeleteAttachmentsMutationInput!): DeleteAttachmentsMutationPayload!
  """Удаление аттестации"""
  deleteAttestation(input: DeleteAttestationMutationInput!): DeleteAttestationMutationPayload!
  """Мутация для удаления категории"""
  deleteCategory(input: DeleteCategoryMutationInput!): DeleteCategoryMutationPayload!
  """
  Удаление записи модели "ChildItemProp"
  """
  deleteChildItemProp(input: DeleteChildItemPropMutationInput!): DeleteChildItemPropMutationPayload!
  """Удаление компетенций"""
  deleteCompetence(input: DeleteCompetenceMutationInput!): DeleteCompetenceMutationPayload!
  """Удаление курса"""
  deleteCourse(input: DeleteCourseMutationInput!): DeleteCourseMutationPayload!
  """Удаление всех курсов группы"""
  deleteCourses(input: DeleteCoursesMutationInput!): DeleteCoursesMutationPayload!
  """
  Удаление записи модели "Direction"
  """
  deleteDirection(input: DeleteDirectionMutationInput!): DeleteDirectionMutationPayload!
  """Удаление дисциплины"""
  deleteDiscipline(input: DeleteDisciplineMutationInput!): DeleteDisciplineMutationPayload!
  """
  Удаление записи модели "EduForm"
  """
  deleteEduForm(input: DeleteEduFormMutationInput!): DeleteEduFormMutationPayload!
  """Удаление часов по плану"""
  deleteEduHour(input: DeleteEduHourMutationInput!): DeleteEduHourMutationPayload!
  """Удаление образовательной программы."""
  deleteEduProgram(input: DeleteEduProgramMutationInput!): DeleteEduProgramMutationPayload!
  """Мутация для полного удаления файла"""
  deleteFile(input: DeleteFileMutationInput!): DeleteFileMutationPayload!
  """
  Удаление записи модели "FileKind"
  """
  deleteFileKind(input: DeleteFileKindMutationInput!): DeleteFileKindMutationPayload!
  """Мутация для удаления группы."""
  deleteGroup(input: DeleteGroupMutationInput!): DeleteGroupMutationPayload!
  """Удаление раздаточных материалов"""
  deleteHandouts(input: DeleteHandoutsMutationInput!): DeleteHandoutsMutationPayload!
  """
  Удаление записи модели "ItemPropContainer"
  """
  deleteItemPropContainer(input: DeleteItemPropContainerMutationInput!): DeleteItemPropContainerMutationPayload!
  """
  Удаление записи модели "Job"
  """
  deleteJob(input: DeleteJobMutationInput!): DeleteJobMutationPayload!
  """
  Удаление записи модели "JobPost"
  """
  deleteJobPost(input: DeleteJobPostMutationInput!): DeleteJobPostMutationPayload!
  """Удаление чата"""
  deleteMember(input: DeleteMemberMutationInput!): DeleteMemberMutationPayload!
  """Удаления сообщения"""
  deleteMessages(input: DeleteMessagesInput!): DeleteMessagesPayload!
  """Удаление методического обеспечения"""
  deleteMethodologicalSupport(input: DeleteMethodologicalSupportMutationInput!): DeleteMethodologicalSupportMutationPayload!
  """Удаление уведомления"""
  deleteNotice(input: DeleteNoticeMutationInput!): DeleteNoticeMutationPayload!
  """Удаление страницы"""
  deletePage(input: DeletePageMutationInput!): DeletePageMutationPayload!
  """Удаление периода"""
  deletePeriod(input: DeletePeriodMutationInput!): DeletePeriodMutationPayload!
  """
  Удаление записи модели "PortfolioFile"
  """
  deletePortfolioFile(input: DeletePortfolioFileMutationInput!): DeletePortfolioFileMutationPayload!
  """Мутация для удаления записи профиля."""
  deleteProfile(input: DeleteProfileMutationInput!): DeleteProfileMutationPayload!
  """Удаление регистрации"""
  deleteRegistration(input: DeleteRegistrationMutationInput!): DeleteRegistrationMutationPayload!
  """Мутация удаления данных"""
  deleteRow(input: DeleteRowMutationInput!): DeleteRowMutationPayload!
  """Удаление секции"""
  deleteSection(input: DeleteSectionMutationInput!): DeleteSectionMutationPayload!
  """Мутация для удаления всех сессий кроме текущей."""
  deleteSessions(input: DeleteSessionsMutationInput!): DeleteSessionsMutationPayload!
  """
  Удаление записи модели "Subsection"
  """
  deleteSubsection(input: DeleteSubsectionMutationInput!): DeleteSubsectionMutationPayload!
  """
  Удаление записи модели "Team"
  """
  deleteTeam(input: DeleteTeamMutationInput!): DeleteTeamMutationPayload!
  """Добавление сообщения в избранные"""
  favoriteMessage(input: FavoriteMessageInput!): FavoriteMessagePayload!
  """Генерация паролей заданным пользователям"""
  generateTeamNewPasswords(input: GenerateTeamNewPasswordsMutationInput!): GenerateTeamNewPasswordsMutationPayload!
  """Мутация для получения токена авторизации."""
  getToken(input: GetTokenMutationInput!): GetTokenMutationPayload!
  """Мутация выхода"""
  logout(input: LogoutMutationInput!): LogoutMutationPayload!
  """Закрепления сообщения"""
  pinnedMessage(input: PinnedMessageInput!): PinnedMessagePayload!
  """Мутация для сброса пароля пользователя."""
  recoveryPassword(input: RecoveryPasswordMutationInput!): RecoveryPasswordMutationPayload!
  """Мутация регистрации новых пользователей."""
  register(input: RegisterMutationInput!): RegisterMutationPayload!
  """Отправка email с кодом на электронную почту."""
  requestCode(input: RequestCodeMutationInput!): RequestCodeMutationPayload!
  """Мутация для сброса настроек по умолчанию"""
  resetSettings(input: ResetSettingsMutationInput!): ResetSettingsMutationPayload!
  """Мутация для сброса пароля пользователя."""
  restorePassword(input: RestorePasswordMutationInput!): RestorePasswordMutationPayload!
  """Отправка письма поддержки"""
  supportSubmit(input: SupportSubmitMutationInput!): SupportSubmitMutationPayload!
  """Выгрузка публикаций в различных форматах."""
  unloadArticles(input: UnloadArticlesMutationInput!): UnloadArticlesMutationPayload!
  """Выгрузка данных в различных форматах."""
  unloadEduPrograms(input: UnloadEduProgramsMutationInput!): UnloadEduProgramsMutationPayload!
  """Выгрузка пользователей группы """
  unloadUsers(input: UnloadUsersMutationInput!): UnloadUsersMutationPayload!
  """Загрузка существующих пользователей в группу из файла"""
  uploadJobs(input: UploadJobsMutationInput!): UploadJobsMutationPayload!
  """Загрузка новых пользователей в группу из файла"""
  uploadJobsUser(input: UploadJobsUserMutationInput!): UploadJobsUserMutationPayload!
  """Загрузка групп пользователей"""
  uploadTeams(input: UploadTeamsMutationInput!): UploadTeamsMutationPayload!
  """Мутация для загрузки пользователей из файла excel | csv."""
  uploadUsers(input: UploadUsersMutationInput!): UploadUsersMutationPayload!
}

"""An object with an ID"""
interface Node {
  """The ID of the object."""
  id: ID!
}

"""Уведомление без дополнительного содержимого"""
type NoticeEmptyType implements NoticeInterface {
  """Дата создания"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Тип уведомления"""
  kind: Int!
  """Идентификатор объекта"""
  objectId: String!
  """Полезная нагрузка"""
  payload: String!
  """Пользователь"""
  user: UserType
}

"""Переопределение стандартного интерфейса уведомлений."""
interface NoticeInterface {
  """Дата создания"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Тип уведомления"""
  kind: Int!
  """Идентификатор объекта"""
  objectId: String!
  """Полезная нагрузка"""
  payload: String!
  """Пользователь"""
  user: UserType
}

"""An enumeration."""
enum NoticeKind {
  """info"""
  A_0
  """page"""
  A_1
  """comment"""
  A_2
  """message"""
  A_3
  """task"""
  A_4
  """billing"""
  A_5
  """paid"""
  A_6
  """mailing"""
  A_7
  """happy_birthday"""
  A_8
}

"""Уведомление типа 'Пришло уведомление'."""
type NoticeMailingType implements NoticeInterface {
  """Дата создания"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Тип уведомления"""
  kind: Int!
  """Оповещение пользователя"""
  mailing: MailingType
  """Идентификатор объекта"""
  objectId: String!
  """Полезная нагрузка"""
  payload: String!
  """Пользователь"""
  user: UserType
}

"""Уведомление типа 'Добавлена новая страница'"""
type NoticePageType implements NoticeInterface {
  """Дата создания"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Тип уведомления"""
  kind: Int!
  """Идентификатор объекта"""
  objectId: String!
  """Страница"""
  page: PageType
  """Полезная нагрузка"""
  payload: String!
  """Пользователь"""
  user: UserType
}

"""Уведомление"""
type NoticeType implements Node {
  """Дата добавления"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Тип уведомления"""
  kind: NoticeKind!
  """Идентификатор объекта"""
  objectId: String!
  """Полезная нагрузка"""
  payload: String!
  """Пользователь"""
  user: UserType
}

type NoticeTypeConnection {
  """Contains the nodes in this connection."""
  edges: [NoticeTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `NoticeType` and its cursor."""
type NoticeTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: NoticeType
}

"""Оповещение пользователей"""
type NotificationType implements Node {
  """Дата добавления"""
  createdAt: DateTime!
  """Скрыть уведомление"""
  hide: Boolean!
  """The ID of the object."""
  id: ID!
  """Уведомление"""
  notice: NoticeInterface!
  """Прочитано ли уведомление"""
  read: Boolean!
  """Пользователь"""
  user: UserType!
}

type NotificationTypeConnection {
  """Contains the nodes in this connection."""
  edges: [NotificationTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `NotificationType` and its cursor."""
type NotificationTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: NotificationType
}

"""Подписка на обновление событий."""
type NotificationsSubscription {
  """Действие пользователя"""
  action: ConsumerActionType!
  """Идентификатор объекта"""
  id: ID!
  notification: NotificationType
}

"""The Relay compliant `PageInfo` type, containing data necessary to paginate this connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

"""Тип страницы"""
type PageKindType {
  id: ID!
  """Название"""
  name: String!
  """Странички"""
  pages: [PageType]!
  """Сегментные элементы"""
  segmentElements: [SegmentElementType]!
}

"""Страница"""
type PageType implements Node {
  """Аватар"""
  avatar: String
  """Категория"""
  category: CategoryType!
  """Комментарии"""
  comments(after: String, before: String, first: Int, last: Int, offset: Int, text_Icontains: String): CommentTypeConnection!
  """Дата создания"""
  createdAt: DateTime!
  """Скрываем ли страницу"""
  hide: Boolean!
  """The ID of the object."""
  id: ID!
  """Тип"""
  kind: PageKindType
  """Показывать параллакс или нет"""
  parallax: Boolean!
  """Приоритет"""
  priority: Boolean!
  """Секции"""
  sections: [SectionInterface]!
  """Подпись страницы"""
  signature: String
  """Теги на странице"""
  tags: [TagType]!
  """Заголовок"""
  title: String!
  """Дата обновления"""
  updatedAt: DateTime!
  """Пользователь, создавший страницу"""
  user: UserType
  """Количество просмотров"""
  views: Int!
}

type PageTypeConnection {
  """Contains the nodes in this connection."""
  edges: [PageTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `PageType` and its cursor."""
type PageTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: PageType
}

"""Период, учебные недели, 1 - 18, допуск, зачет, экзамен, кр, кр, кн1, кн2."""
type PeriodType {
  """Дата создания"""
  createdAt: DateTime!
  id: ID!
  """Название"""
  name: String!
  """Позиция для сортировки"""
  order: Int!
  """Возможные учеты студентов на занятиях"""
  registrations: [RegistrationType!]!
  """Короткое название"""
  shortName: String!
  """Шаблон doc"""
  templateDoc: String
  """Шаблон xml"""
  templateXml: String
  """Дата обновления"""
  updatedAt: DateTime!
}

"""Привилегия пользователя или группы пользователей."""
type PermissionType {
  codename: String!
  """Тип модели Django"""
  contentType: ContentTypeType!
  """Группы"""
  groups: GroupType
  id: ID!
  name: String!
}

"""Интерфейс разрешений на действия с объектом модели"""
interface PermissionsInterface {
  """Есть ли права на изменение объекта модели"""
  canChange: Boolean!
  """Есть ли права на удаление объекта модели"""
  canDelete: Boolean!
}

input PinnedMessageInput {
  """Идентификатор чата"""
  chatId: ID!
  clientMutationId: String
  """Идентификатор сообщения"""
  messageId: ID!
}

"""Закрепления сообщения """
type PinnedMessagePayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Закреленное сообщение"""
  message: MessageType
  """Успех мутации"""
  success: Boolean!
}

"""Информация по показателям для типов различных показателей."""
type PointStatisticsType {
  """Название"""
  name: String!
  """Текущее значение"""
  value: Int!
}

"""Точка статистики."""
type PointTotalStatisticsType {
  """Название"""
  name: String!
  """Общее значение"""
  total: Int!
  """Текущее значение"""
  value: Int!
}

"""Файл в портфолио."""
type PortfolioFileType implements Node {
  """Дата создания"""
  createdAt: DateTime!
  """Описание файла в портфолио"""
  describe: String!
  """Дисциплина"""
  discipline: DisciplineType
  """Привязанный к портфолио файл"""
  file: FileType!
  """The ID of the object."""
  id: ID!
  """Тип файла из портфолио"""
  kind: FileKindType
  """Дата обновления"""
  updatedAt: DateTime!
  """Пользователь, который подтверждает правильность файла, занесенного в портфолио"""
  user: UserType
}

type PortfolioFileTypeConnection {
  """Contains the nodes in this connection."""
  edges: [PortfolioFileTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `PortfolioFileType` and its cursor."""
type PortfolioFileTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: PortfolioFileType
}

"""Занимаемая должность"""
type PostType {
  id: ID!
  """Название"""
  name: String!
  """Позиция для сортировки"""
  order: Int!
  """Возможные статусы"""
  statuses: [JobPostStatusType!]!
}

"""An enumeration."""
enum ProfileKind {
  """text"""
  A_0
  """date"""
  A_1
  """bool"""
  A_2
  """file"""
  A_3
  """choice"""
  A_4
}

"""Тип параметров пользователей."""
type ProfileType {
  """Доступные дочерние поля"""
  available: [ProfileType!]!
  """Дочерние"""
  children: [ProfileType!]!
  """Уникальный код настройки"""
  code: String!
  id: ID!
  """Тип настройки"""
  kind: ProfileKind!
  """Название настройки"""
  name: String!
  """Позиция"""
  position: Int!
  """Значение пользователя"""
  value: ProfileValueType
}

"""Значение параметров пользователей."""
type ProfileValueType {
  """Дата создания"""
  createdAt: DateTime!
  id: ID!
  """Профиль"""
  profile: ProfileType!
  """Дата обновления"""
  updatedAt: DateTime!
  """Пользователь"""
  user: UserType!
  """Значение хранимой информации"""
  value: String!
  """Доступность настройки"""
  visibility: Boolean!
}

"""Схема запросов данных"""
type Query {
  _debug: DjangoDebug
  """Статистика активности"""
  activeStatistics: ActiveStatisticsType!
  """Приложения"""
  applications: [ApplicationType!]!
  """Типы индексирования публикаций"""
  articleIndexes: [ArticleIndexType!]!
  """Виды публикаций"""
  articleKinds: [ArticleKindType!]!
  """Публикации"""
  articles(after: String, before: String, first: Int, last: Int, name_Icontains: String, offset: Int, users: [ID], year: Int, year_In: [Int]): ArticleTypeConnection!
  """Авторы"""
  articlesAuthors(after: String, article: ID, before: String, first: Int, last: Int, name_Icontains: String, offset: Int, user: ID): AuthorTypeConnection!
  """Все авторы публикаций"""
  articlesUsers(after: String, before: String, email_Icontains: String, first: Int, firstName_Icontains: String, last: Int, lastName_Icontains: String, offset: Int, sirName_Icontains: String, username_Icontains: String): UserTypeConnection!
  """Все года публикаций"""
  articlesYears: [Int]!
  """Файлы"""
  attachedFiles(chatId: ID!, userId: ID): [AttachedFileType!]!
  """Тип блока образовательной программы"""
  blockKinds: [BlockKindType!]!
  """Категории"""
  categories(after: String, before: String, first: Int, last: Int, offset: Int, parent: ID, parent_Isnull: Boolean, text_Icontains: String): CategoryTypeConnection!
  """Категория"""
  category(categoryId: ID!): CategoryType!
  """Сообщения в чатах"""
  chatMessages(after: String, before: String, chat: ID, deleted: Boolean, favorite: Boolean, first: Int, last: Int, message_Text_Icontains: String, offset: Int, user: ID): ChatMessageTypeConnection!
  """Компетенции"""
  competences(after: String, before: String, excludeDisciplineId: ID, first: Int, last: Int, name_Icontains: String, offset: Int): CompetenceTypeConnection!
  """Курс"""
  course(courseId: ID): CourseType!
  """Раздаточный материал курса"""
  courseHandouts(after: String, before: String, courseId: ID!, description_Icontains: String, first: Int, last: Int, offset: Int, periodId_In: [ID]): HandoutTypeConnection!
  """Курсы группы пользователей"""
  courses(after: String, before: String, disciplineId_In: [ID], disciplineName_Icontains: String, first: Int, last: Int, offset: Int, semester: Float, semester_Icontains: String, teacherId_In: [ID], teachersNames_Icontains: String, teamId: ID, workKindId_In: [ID], workKindName_Icontains: String): CourseTypeConnection!
  """Направления подготовки"""
  directions: [DirectionType!]!
  """Дисциплина"""
  discipline(disciplineId: ID): DisciplineType!
  """Компетенция"""
  disciplineCompetences(disciplineId: ID): [CompetenceType]!
  """Часы"""
  disciplineEduHours(disciplineId: ID): [EduHoursType]!
  """Тип дисциплины"""
  disciplineKinds: [DisciplineKindType!]!
  """Часы дисциплины семестра по плану"""
  disciplineSemesterEduHours(courseNumber: Int!, disciplineId: ID!, semesterNumber: Int!): [EduHoursType!]
  """Формы представления дисциплины"""
  disciplineViews: [DisciplineViewType!]!
  """Дисциплины"""
  disciplines(after: String, before: String, code: String, code_Icontains: String, createdAt: DateTime, eduProgramId: ID, eduProgram_Id: ID, first: Int, last: Int, name: String, name_Icontains: String, offset: Int, updatedAt: DateTime, viewId: ID, view_Id: Float): DisciplineTypeConnection!
  """Цикл образовательных программ"""
  eduCycles: [EduCycleType!]!
  """Формы обучения"""
  eduForms: [EduFormType!]!
  """Образовательная программа"""
  eduProgram(eduProgramId: ID): EduProgramType!
  """Курсы образовательной программы"""
  eduProgramCoursesNumbers(eduProgramId: ID!): [Int]
  """Образовательные программы"""
  eduPrograms(admission_Icontains: String, after: String, before: String, direction_Code_Icontains: String, direction_Name_Icontains: String, first: Int, last: Int, name_Icontains: String, offset: Int): EduProgramTypeConnection!
  """Статистика ОП"""
  eduProgramsStatistics(
    """Выбор годов поступления"""
    admissions: [String]!
    """Направления подготовки"""
    directions: [ID]!
    """Формы обучения"""
    eduForms: [String]!
  ): [EduProgramStatisticsType]!
  """Образовательные услуги"""
  eduServices: [EduServiceType!]!
  """Типы загружаемых файлов"""
  fileKinds: [FileKindType!]!
  files(after: String, before: String, first: Int, last: Int, name_Icontains: String, offset: Int, userId: ID): FileTypeConnection!
  groups: [GroupType!]!
  """Установлены ли настройки приложения"""
  hasSettings: Boolean!
  """Тип часов"""
  hoursKinds: [HoursKindType!]!
  logEntry(action_Contains: String, after: String, before: String, contentType_Model_Icontains: String, createdAt_Gt: DateTime, createdAt_Gte: DateTime, createdAt_Lt: DateTime, createdAt_Lte: DateTime, first: Int, last: Int, objectId_Icontains: String, offset: Int, userId: ID): LogEntryTypeConnection!
  logRequests(after: String, before: String, createdAt_Gt: DateTime, createdAt_Gte: DateTime, createdAt_Lt: DateTime, createdAt_Lte: DateTime, first: Int, last: Int, offset: Int, page_Icontains: String, userId: ID): LogRequestTypeConnection!
  """Информация обо мне"""
  me: UserType
  """Участник"""
  member(memberId: ID!): MemberType!
  """Участники в чатах"""
  members(after: String, before: String, chat: ID, chat_Name_Icontains: String, excluded: Boolean, first: Int, last: Int, offset: Int, user: ID): MemberTypeConnection!
  """Методическое обеспечение"""
  methodologicalSupports(after: String, before: String, createdAt: DateTime, discipline_Id: ID, first: Int, last: Int, name: String, offset: Int, updatedAt: DateTime): MethodologicalSupportTypeConnection!
  """Источник уведомлений"""
  notices(after: String, before: String, first: Int, last: Int, offset: Int, user: ID): NoticeTypeConnection!
  """Детализация уведомления"""
  notification(
    """Идентификатор уведомления"""
    notificationId: ID!
  ): NotificationType!
  """Уведомления пользователя"""
  notifications(after: String, before: String, first: Int, hide: Boolean, last: Int, notice: ID, offset: Int, user: ID): NotificationTypeConnection!
  """Страница"""
  page(pageId: ID!): PageType!
  """Получение типа страницы"""
  pageKind(pageKindId: ID!): PageKindType!
  """Типы страниц"""
  pageKinds: [PageKindType!]!
  """Страницы"""
  pages(after: String, before: String, category_Id: ID, first: Int, kind_Id: ID, last: Int, offset: Int, title_Icontains: String): PageTypeConnection!
  """Периоды"""
  periods: [PeriodType!]!
  permissions: [PermissionType!]!
  portfolioFiles(after: String, before: String, describe_Icontains: String, disciplineId: ID, file_UserId_In: [ID], first: Int, isConfirmed: Boolean, kindId: Float, last: Int, offset: Int): PortfolioFileTypeConnection!
  """Должности"""
  posts: [PostType!]!
  """Группы, в которые включен пользователь и по иерархии вниз с наличием курсов"""
  processTeams(admission_Icontains: String, after: String, before: String, courseCount: Float, courseCount_Gt: Float, first: Int, last: Int, name_Icontains: String, offset: Int, shortName_Icontains: String): TeamTypeConnection!
  """Доступные значения профиля пользователя"""
  profileInformation(
    """Идентификатор пользователя"""
    userId: ID!
  ): [ProfileType!]!
  """Список настроек профиля"""
  profiles: [ProfileType!]!
  """Значение профиля пользователя"""
  profilesValue(
    """Идентификатор пользователя"""
    userId: ID!
  ): [ProfileValueType!]!
  """Учет студентов на занятиях"""
  registrations: [RegistrationType!]!
  """Группы пользователей, связанные с пользователем"""
  relativeTeams(admission_Icontains: String, after: String, before: String, courseCount: Float, courseCount_Gt: Float, first: Int, last: Int, name_Icontains: String, offset: Int, shortName_Icontains: String): TeamTypeConnection!
  """Статистика запросов"""
  requestStatistics: RequestStatisticsType!
  """Сегменты страницы"""
  segments: [SegmentType!]!
  """Дисциплины семестра"""
  semesterDisciplines(courseNumber: Int!, hasCourses: Boolean!, semesterNumber: Int!, teamId: ID!): [DisciplineType!]
  """Доступные сессии"""
  sessions(userId: ID): [SessionType!]!
  """Настройки приложения"""
  settings: [SettingType!]!
  subsection(url: String!): SubsectionType
  subsections: [SubsectionType!]!
  """Теги"""
  tags(after: String, before: String, first: Int, last: Int, name_Icontains: String, offset: Int): TagTypeConnection!
  """Группа пользователей"""
  team(teamId: ID): TeamType!
  """Группы пользователей"""
  teams(admission_Icontains: String, after: String, before: String, courseCount: Float, courseCount_Gt: Float, first: Int, last: Int, name_Icontains: String, offset: Int, shortName_Icontains: String): TeamTypeConnection!
  """Итоговый отчет по оценкам группы"""
  teamsSummaryReport(teamIds: [ID!]!): [TeamSummaryReportType]!
  """Информация о указанном пользователе"""
  user(userId: ID!): UserType
  """Доступная информация о пользователе"""
  userInformation(
    """Идентификатор пользователя"""
    userId: ID!
  ): UserType
  """Пользователи приложения"""
  users(after: String, before: String, email_Icontains: String, first: Int, firstName_Icontains: String, last: Int, lastName_Icontains: String, offset: Int, sirName_Icontains: String, username_Icontains: String): UserTypeConnection!
  """Итоговый отчет по оценкам пользователей"""
  usersSummaryReport(userIds: [ID!]!): [TeamSummaryReportType]!
  """Форма работы"""
  workForms: [WorkFormType!]!
  """Виды работ"""
  workKinds: [WorkKindType!]!
}

input RecoveryPasswordMutationInput {
  clientMutationId: String
  """Email адрес"""
  email: String!
}

"""Мутация для сброса пароля пользователя."""
type RecoveryPasswordMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

input RegisterMutationInput {
  """Согласие на обработку персональных данных"""
  agreement: Boolean!
  """Дата рождения"""
  birthday: Date!
  clientMutationId: String
  """Email"""
  email: String!
  """Имя"""
  firstName: String!
  """Фамилия"""
  lastName: String!
  """Пароль"""
  password: String!
  """Отчество"""
  sirName: String
  """Логин"""
  username: String!
}

"""Мутация регистрации новых пользователей."""
type RegisterMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

"""An enumeration."""
enum RegistrationKind {
  """attendance"""
  A_0
  """mark"""
  A_1
}

"""Тип учета студентов на занятиях."""
type RegistrationType {
  """Дата создания"""
  createdAt: DateTime!
  id: ID!
  """Тип записи"""
  kind: RegistrationKind!
  """Название"""
  name: String!
  """Позиция для сортировки"""
  order: Int!
  """Короткое название"""
  shortName: String!
  """Дата обновления"""
  updatedAt: DateTime!
}

input RequestCodeMutationInput {
  clientMutationId: String
  """Email адрес"""
  email: String!
}

"""Отправка email с кодом на электронную почту."""
type RequestCodeMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

"""Информация по клиентам, с которых делаются запросы."""
type RequestStatisticsType {
  """Клиенты"""
  browsers: [PointStatisticsType]!
  """Устройства"""
  device: [PointStatisticsType]!
  """Операционные системы"""
  os: [PointStatisticsType]!
}

input ResetSettingsMutationInput {
  clientMutationId: String
  """Идентификатор пользователя"""
  userId: ID!
}

"""Мутация для сброса настроек по умолчанию"""
type ResetSettingsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Лист настроек"""
  settings: [SettingType!]
  """Успех мутации"""
  success: Boolean!
}

input RestorePasswordMutationInput {
  clientMutationId: String
  """Пароль"""
  password: String!
  """Токен"""
  token: String!
}

"""Мутация для сброса пароля пользователя."""
type RestorePasswordMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

"""Ошибка в строке."""
type RowFieldErrorType {
  """Ошибки, возникающие в строке"""
  errors: [ErrorFieldType]!
  """Номер строки с ошибкой"""
  row: Int!
}

type SectionFilesType implements SectionInterface {
  """Файлы"""
  files: [FileType]!
  """Идентификатор"""
  id: Int!
  """Тип страницы"""
  kind: Int!
  """Страница"""
  page: PageType!
  """Конструкции"""
  payload: JSONString
  """Порядок вывода"""
  position: Int!
  """Текст страницы"""
  text: String!
  """Пользователь"""
  user: UserType!
}

type SectionGalleryType implements SectionInterface {
  """Идентификатор"""
  id: Int!
  """Изображения"""
  images: [FileType]!
  """Тип страницы"""
  kind: Int!
  """Страница"""
  page: PageType!
  """Конструкции"""
  payload: JSONString
  """Порядок вывода"""
  position: Int!
  """Текст страницы"""
  text: String!
  """Пользователь"""
  user: UserType!
}

interface SectionInterface {
  """Идентификатор"""
  id: Int!
  """Тип страницы"""
  kind: Int!
  """Страница"""
  page: PageType!
  """Порядок вывода"""
  position: Int!
  """Текст страницы"""
  text: String!
  """Пользователь"""
  user: UserType!
}

"""Секции"""
type SectionTextType implements SectionInterface {
  """Идентификатор"""
  id: Int!
  """Тип страницы"""
  kind: Int!
  """Страница"""
  page: PageType!
  """Порядок вывода"""
  position: Int!
  """Текст страницы"""
  text: String!
  """Пользователь"""
  user: UserType!
}

type SectionUsersType implements SectionInterface {
  """Идентификатор"""
  id: Int!
  """Тип страницы"""
  kind: Int!
  """Страница"""
  page: PageType!
  """Конструкции"""
  payload: JSONString
  """Порядок вывода"""
  position: Int!
  """Текст страницы"""
  text: String!
  """Пользователь"""
  user: UserType!
  """Пользователи"""
  users: [UserType]!
}

"""An enumeration."""
enum SegmentAlign {
  """Left"""
  A_0
  """Center"""
  A_1
  """Right"""
  A_2
}

"""An enumeration."""
enum SegmentElementRepresent {
  """grid"""
  A_0
  """card"""
  A_1
  """list"""
  A_2
  """slider"""
  A_3
}

"""Элемент сегмента"""
type SegmentElementType {
  """Колонок в элементе"""
  columns: Int!
  """Дата создания"""
  createdAt: DateTime!
  id: ID!
  """Тип страницы"""
  pageKind: PageKindType!
  """Количество страниц в запросе"""
  pageSize: Int!
  """Позиция в сортировке"""
  position: Int!
  """Представление"""
  represent: SegmentElementRepresent
  """Дата обновления"""
  updatedAt: DateTime!
  """Пользователь"""
  user: UserType!
  """Тип элемента для рендера"""
  view: SegmentElementView
  """Ширина колонки"""
  width: Int!
}

"""An enumeration."""
enum SegmentElementView {
  """empty"""
  A_0
  """card"""
  A_1
}

"""Сегмент"""
type SegmentType {
  """Выравнивание заголовка"""
  align: SegmentAlign!
  """Дата создания"""
  createdAt: DateTime!
  """Элементы сегмента страницы"""
  elements: [SegmentElementType]!
  id: ID!
  """Заголовок страницы"""
  name: String
  """Позиция в сортировке"""
  position: Int!
  """Дата обновления"""
  updatedAt: DateTime!
  """Тип элемента для рендера"""
  view: SegmentView
}

"""An enumeration."""
enum SegmentView {
  """empty"""
  A_0
  """card"""
  A_1
}

"""Сессия пользователя."""
type SessionType implements Node {
  """Количество действий в сессии пользователя"""
  activity: Int!
  """Браузер пользователя"""
  browser: String!
  """Дата сессии пользователя"""
  date: DateTime
  """Устройство пользователя"""
  device: String!
  """Количество запросов в сессии пользователя"""
  history: Int!
  """The ID of the object."""
  id: ID!
  """ip-адрес сессии"""
  ip: String!
  """Операционная система пользователя"""
  os: String!
  """Пользователь"""
  user: UserType!
}

"""An enumeration."""
enum SettingKindValue {
  """text"""
  A_0
  """file"""
  A_1
  """json"""
  A_2
  """bool"""
  A_4
}

"""Настройка приложения."""
type SettingType {
  id: ID!
  """Ключ настройки"""
  key: String!
  """Тип значения настройки"""
  kindValue: SettingKindValue!
  """Может ли поле быть изменено"""
  readonly: Boolean!
  """Значение"""
  value: String!
}

"""Подписки на сокеты"""
type Subscription {
  """Получение собщений"""
  chatMessages(
    """Идентификатор чата"""
    chatId: ID
  ): ChatMessagesSubscription!
  """Получение чатов"""
  members: MembersSubscription!
  """Поток новых уведомлений"""
  notifications: NotificationsSubscription!
}

type SubsectionType implements Node {
  """Название подраздела"""
  header: String!
  """The ID of the object."""
  id: ID!
  itemPropContainers: [ItemPropContainerType!]!
  """Адрес подраздела"""
  url: String!
}

input SupportSubmitMutationInput {
  clientMutationId: String
  """Загружаемые файлы"""
  files: [Upload!]
  """Текст"""
  text: String!
  """Тема"""
  topic: String!
}

"""Отправка письма поддержки"""
type SupportSubmitMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Успех мутации"""
  success: Boolean!
}

"""Ячейка документа."""
type TableCellType {
  """Выравнивание"""
  align: String
  """Заголовок ячейки"""
  header: String!
  """Тип ячейки"""
  type: String
  """Значение ячейки"""
  value: String
}

"""Строка документа."""
type TableRowType {
  """Строка документа"""
  cells: [TableCellType]!
  """Индекс строки"""
  index: Int!
}

"""Документ, представлющий собой таблицу."""
type TableType {
  """Заголовки документа"""
  headers: [String]!
  """Строки документа"""
  rows: [TableRowType]!
}

"""Тег."""
type TagType implements Node {
  """Дата создания"""
  createdAt: DateTime!
  """The ID of the object."""
  id: ID!
  """Название"""
  name: String!
  """Пользователь, создавший тег"""
  user: UserType
}

type TagTypeConnection {
  """Contains the nodes in this connection."""
  edges: [TagTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `TagType` and its cursor."""
type TagTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: TagType
}

"""Разрешения группы пользователей"""
type TeamPermissionsType implements PermissionsInterface {
  """Есть ли права на изменение объекта модели"""
  canChange: Boolean!
  """Есть ли права на удаление объекта модели"""
  canDelete: Boolean!
  """Есть ли права на просмотр участников группы"""
  canViewTeamMembers: Boolean!
}

"""Итоговый отчет по оценкам группы."""
type TeamSummaryReportType {
  """Оценки"""
  attestations: [AttestationType!]!
  """Часы по плану"""
  eduHours: [EduHoursType!]!
  """Группа"""
  team: TeamType!
}

"""Группа пользователей"""
type TeamType implements Node {
  """Год образования/поступления"""
  admission: Int!
  """Курсы"""
  courses: [CourseType!]!
  """Дата создания"""
  createdAt: DateTime!
  """Удалена ли группа (закончено обучение)"""
  delete: Boolean!
  """Реализуемая образовательная программа"""
  eduProgram: EduProgramType
  """Группа прав"""
  group: GroupType
  """The ID of the object."""
  id: ID!
  """Пользователи с учетом работы"""
  jobs: [JobType!]!
  """Название"""
  name: String!
  """Родительская группа (Администрация -> Кафедра -> Студенты)"""
  parent: TeamType
  """Разрешения на действия с объектом модели"""
  permissions: TeamPermissionsType!
  """Пользователи, ответственные за группу"""
  responsibleUsers: [UserType!]!
  """Сокращенное название"""
  shortName: String!
  """Дата обновления"""
  updatedAt: DateTime!
  """Участники"""
  users: [UserType!]!
}

type TeamTypeConnection {
  """Contains the nodes in this connection."""
  edges: [TeamTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `TeamType` and its cursor."""
type TeamTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: TeamType
}

input UnloadArticlesMutationInput {
  clientMutationId: String
  """Формат выгрузки: docx, xlsx, bibtex"""
  extension: String!
}

"""Выгрузка публикаций в различных форматах."""
type UnloadArticlesMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Ссылка на сгенерированный файл"""
  src: String
  """Успех мутации"""
  success: Boolean!
}

input UnloadEduProgramsMutationInput {
  clientMutationId: String
  """Формат выгрузки: html, xlsx"""
  extension: String!
}

"""Выгрузка данных в различных форматах."""
type UnloadEduProgramsMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Ссылка на сгенерированный файл"""
  src: String
  """Успех мутации"""
  success: Boolean!
}

input UnloadUsersMutationInput {
  clientMutationId: String
  """Формат выгрузки: html, xlsx"""
  extension: String!
  """Идентификатор группы"""
  teamId: ID!
  """Идентификаторы пользователей"""
  usersId: [ID!]!
}

"""Выгрузка пользователей группы """
type UnloadUsersMutationPayload {
  clientMutationId: String
  """Ошибки мутации"""
  errors: [ErrorFieldType!]!
  """Ссылка на сгенерированный файл"""
  src: String
  """Успех мутации"""
  success: Boolean!
}

"""
Create scalar that ignores normal serialization/deserialization, since
that will be handled by the multipart request spec
"""
scalar Upload

input UploadJobsMutationInput {
  clientMutationId: String
  """Источник данных, файл xlsx, csv, json"""
  file: Upload!
  """Создавать приказ в формате docx"""
  generateDocx: Boolean!
  """Создавать приказ в формате pdf"""
  generatePdf: Boolean!
  """Идентификатор группы"""
  teamId: ID!
}

"""Загрузка существующих пользователей в группу из файла"""
type UploadJobsMutationPayload {
  clientMutationId: String
  """Ошибки валидации"""
  errors: [RowFieldErrorType]!
  """Новые места работы пользователей"""
  jobs: [JobType]
  """Ссылка на сгенерированный архив с приказами"""
  src: String
  """Успех мутации"""
  success: Boolean!
  """Валидируемый документ"""
  table: TableType
}

input UploadJobsUserMutationInput {
  clientMutationId: String
  """Источник данных, файл xlsx, csv, json"""
  file: Upload!
  """Создавать приказ в формате docx"""
  generateDocx: Boolean!
  """Создавать приказ в формате pdf"""
  generatePdf: Boolean!
  """Тип работы"""
  kind: String!
  """Идентификатор занимаемой должности"""
  postId: ID!
  """Занимаемая ставка"""
  rate: Float!
  """Дата присвоения статуса места работы пользователя"""
  statusCreatedAt: Date!
  """Идентификатор статуса места работы пользователя"""
  statusId: ID!
  """Идентификатор группы"""
  teamId: ID!
}

"""Загрузка новых пользователей в группу из файла"""
type UploadJobsUserMutationPayload {
  clientMutationId: String
  """Ошибки валидации"""
  errors: [RowFieldErrorType]!
  """Ошибки мутации"""
  errorsJob: [ErrorFieldType!]!
  """Новые места работы пользователей"""
  jobs: [JobType]
  """Ссылка на сгенерированный архив с приказами"""
  src: String
  """Успех мутации"""
  success: Boolean!
  """Валидируемый документ"""
  table: TableType
}

input UploadTeamsMutationInput {
  clientMutationId: String
  """Источник данных, файл xlsx, csv, json"""
  file: Upload!
}

"""Загрузка групп пользователей"""
type UploadTeamsMutationPayload {
  clientMutationId: String
  """Ошибки валидации"""
  errors: [RowFieldErrorType]!
  """Успех мутации"""
  success: Boolean!
  """Валидируемый документ"""
  table: TableType
  """Загруженные группы пользователей"""
  teams: [TeamType]
}

input UploadUsersMutationInput {
  clientMutationId: String
  """Источник данных, файл xlsx или csv"""
  file: Upload!
  """Для загрузки пользователей"""
  groupsId: [Int]
}

"""Мутация для загрузки пользователей из файла excel | csv."""
type UploadUsersMutationPayload {
  clientMutationId: String
  """Ошибки валидации"""
  errors: [RowFieldErrorType]!
  """Успех мутации"""
  success: Boolean!
  """Валидируемый документ"""
  table: TableType
  """Загруженные пользователи"""
  users: [UserType]
}

"""Описание пользовательского типа."""
type UserType implements Node {
  """Пользовательское соглашение"""
  agreement: DateTime
  articles: [ArticleType]!
  """Аватар"""
  avatar: String
  """День рождения"""
  birthday: Date
  change: Boolean!
  """Дата добавления"""
  createdAt: DateTime!
  """email"""
  email: String!
  """Имя"""
  firstName: String!
  """Группы пользователя"""
  groups: [GroupType]!
  """The ID of the object."""
  id: ID!
  """Является ли пользователь активным"""
  isActive: Boolean!
  jobs: [JobType]!
  """Фамилия"""
  lastName: String!
  notices(after: String, before: String, first: Int, last: Int, offset: Int, user: ID): NoticeTypeConnection!
  notifications(after: String, before: String, first: Int, hide: Boolean, last: Int, notice: ID, offset: Int, user: ID): NotificationTypeConnection!
  """Привилегии пользователя"""
  permissions: [String]!
  profileValues: [ProfileValueType]!
  responsibleTeams: [TeamType]!
  """Сессия пользователя"""
  session: SessionType
  """Отчество"""
  sirName: String
  teams: [TeamType]!
  """login"""
  username: String!
}

type UserTypeConnection {
  """Contains the nodes in this connection."""
  edges: [UserTypeEdge]!
  """Number of nodes."""
  nodeCount: Int!
  """Pagination data for this connection."""
  pageInfo: PageInfo!
  """Number of items in the queryset."""
  totalCount: Int!
}

"""A Relay edge containing a `UserType` and its cursor."""
type UserTypeEdge {
  """A cursor for use in pagination"""
  cursor: String!
  """The item at the end of the edge"""
  node: UserType
}

"""Форма работы."""
type WorkFormType {
  id: ID!
  """Название"""
  name: String!
  """Позиция для сортировки"""
  order: Int!
}

"""Вид работы."""
type WorkKindType {
  """Дата создания"""
  createdAt: DateTime!
  id: ID!
  """Скрыт ли вид работы"""
  isHidden: Boolean!
  """Название"""
  name: String!
  """Позиция для сортировки"""
  order: Int!
  """Короткое название"""
  shortName: String!
  """Дата обновления"""
  updatedAt: DateTime!
  """Форма работы"""
  workForm: WorkFormType
}
